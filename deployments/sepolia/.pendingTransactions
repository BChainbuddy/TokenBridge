{
  "0x6e109c9a8a1593ed3d4ed1c7f2b97d9480221415bd228859f0933962ac250294": {
    "name": "Token",
    "deployment": {
      "_format": "hh-sol-artifact-1",
      "contractName": "Token",
      "sourceName": "contracts/Token.sol",
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "name": "addTokenBridgeAddress",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "bridgeBurn",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "bridgeMint",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x60a06040523480156200001157600080fd5b506040518060400160405280600581526020017f546f6b656e0000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f544f4b000000000000000000000000000000000000000000000000000000000081525081600390816200008f919062000358565b508060049081620000a1919062000358565b5050503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506200043f565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200016057607f821691505b60208210810362000176576200017562000118565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001e07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001a1565b620001ec8683620001a1565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000239620002336200022d8462000204565b6200020e565b62000204565b9050919050565b6000819050919050565b620002558362000218565b6200026d620002648262000240565b848454620001ae565b825550505050565b600090565b6200028462000275565b620002918184846200024a565b505050565b5b81811015620002b957620002ad6000826200027a565b60018101905062000297565b5050565b601f8211156200030857620002d2816200017c565b620002dd8462000191565b81016020851015620002ed578190505b62000305620002fc8562000191565b83018262000296565b50505b505050565b600082821c905092915050565b60006200032d600019846008026200030d565b1980831691505092915050565b60006200034883836200031a565b9150826002028217905092915050565b6200036382620000de565b67ffffffffffffffff8111156200037f576200037e620000e9565b5b6200038b825462000147565b62000398828285620002bd565b600060209050601f831160018114620003d05760008415620003bb578287015190505b620003c785826200033a565b86555062000437565b601f198416620003e0866200017c565b60005b828110156200040a57848901518255600182019150602085019450602081019050620003e3565b868310156200042a578489015162000426601f8916826200031a565b8355505b6001600288020188555050505b505050505050565b608051611a9f6200045b600039600061043b0152611a9f6000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b411461025d578063a457c2d71461027b578063a9059cbb146102ab578063dd62ed3e146102db576100ea565b806370a08231146101f557806374f4f547146102255780638c2a993e14610241576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806345494e3e146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761030b565b60405161010491906110ee565b60405180910390f35b610127600480360381019061012291906111a9565b61039d565b6040516101349190611204565b60405180910390f35b6101456103c0565b604051610152919061122e565b60405180910390f35b61017560048036038101906101709190611249565b6103ca565b6040516101829190611204565b60405180910390f35b6101936103f9565b6040516101a091906112b8565b60405180910390f35b6101c360048036038101906101be91906111a9565b610402565b6040516101d09190611204565b60405180910390f35b6101f360048036038101906101ee91906112d3565b610439565b005b61020f600480360381019061020a91906112d3565b61050b565b60405161021c919061122e565b60405180910390f35b61023f600480360381019061023a91906111a9565b610553565b005b61025b600480360381019061025691906111a9565b6105f1565b005b61026561068f565b60405161027291906110ee565b60405180910390f35b610295600480360381019061029091906111a9565b610721565b6040516102a29190611204565b60405180910390f35b6102c560048036038101906102c091906111a9565b610798565b6040516102d29190611204565b60405180910390f35b6102f560048036038101906102f09190611300565b6107bb565b604051610302919061122e565b60405180910390f35b60606003805461031a9061136f565b80601f01602080910402602001604051908101604052809291908181526020018280546103469061136f565b80156103935780601f1061036857610100808354040283529160200191610393565b820191906000526020600020905b81548152906001019060200180831161037657829003601f168201915b5050505050905090565b6000806103a8610842565b90506103b581858561084a565b600191505092915050565b6000600254905090565b6000806103d5610842565b90506103e2858285610a13565b6103ed858585610a9f565b60019150509392505050565b60006012905090565b60008061040d610842565b905061042e81858561041f85896107bb565b61042991906113cf565b61084a565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104be9061144f565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105da906114e1565b60405180910390fd5b6105ed8282610d15565b5050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610681576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610678906114e1565b60405180910390fd5b61068b8282610d23565b5050565b60606004805461069e9061136f565b80601f01602080910402602001604051908101604052809291908181526020018280546106ca9061136f565b80156107175780601f106106ec57610100808354040283529160200191610717565b820191906000526020600020905b8154815290600101906020018083116106fa57829003601f168201915b5050505050905090565b60008061072c610842565b9050600061073a82866107bb565b90508381101561077f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077690611573565b60405180910390fd5b61078c828686840361084a565b60019250505092915050565b6000806107a3610842565b90506107b0818585610a9f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b090611605565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610928576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091f90611697565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a06919061122e565b60405180910390a3505050565b6000610a1f84846107bb565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a995781811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290611703565b60405180910390fd5b610a98848484840361084a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0590611795565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7490611827565b60405180910390fd5b610b88838383610d31565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c05906118b9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cfc919061122e565b60405180910390a3610d0f848484610d36565b50505050565b610d1f8282610d3b565b5050565b610d2d8282610f08565b5050565b505050565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610daa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da19061194b565b60405180910390fd5b610db682600083610d31565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e33906119dd565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610eef919061122e565b60405180910390a3610f0383600084610d36565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6e90611a49565b60405180910390fd5b610f8360008383610d31565b8060026000828254610f9591906113cf565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611046919061122e565b60405180910390a361105a60008383610d36565b5050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561109857808201518184015260208101905061107d565b60008484015250505050565b6000601f19601f8301169050919050565b60006110c08261105e565b6110ca8185611069565b93506110da81856020860161107a565b6110e3816110a4565b840191505092915050565b6000602082019050818103600083015261110881846110b5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061114082611115565b9050919050565b61115081611135565b811461115b57600080fd5b50565b60008135905061116d81611147565b92915050565b6000819050919050565b61118681611173565b811461119157600080fd5b50565b6000813590506111a38161117d565b92915050565b600080604083850312156111c0576111bf611110565b5b60006111ce8582860161115e565b92505060206111df85828601611194565b9150509250929050565b60008115159050919050565b6111fe816111e9565b82525050565b600060208201905061121960008301846111f5565b92915050565b61122881611173565b82525050565b6000602082019050611243600083018461121f565b92915050565b60008060006060848603121561126257611261611110565b5b60006112708682870161115e565b93505060206112818682870161115e565b925050604061129286828701611194565b9150509250925092565b600060ff82169050919050565b6112b28161129c565b82525050565b60006020820190506112cd60008301846112a9565b92915050565b6000602082840312156112e9576112e8611110565b5b60006112f78482850161115e565b91505092915050565b6000806040838503121561131757611316611110565b5b60006113258582860161115e565b92505060206113368582860161115e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061138757607f821691505b60208210810361139a57611399611340565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113da82611173565b91506113e583611173565b92508282019050808211156113fd576113fc6113a0565b5b92915050565b7f61646472657373206e6f7420746865206f776e65720000000000000000000000600082015250565b6000611439601583611069565b915061144482611403565b602082019050919050565b600060208201905081810360008301526114688161142c565b9050919050565b7f43616e206f6e6c792062652063616c6c65642066726f6d20746865206272696460008201527f6765000000000000000000000000000000000000000000000000000000000000602082015250565b60006114cb602283611069565b91506114d68261146f565b604082019050919050565b600060208201905081810360008301526114fa816114be565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061155d602583611069565b915061156882611501565b604082019050919050565b6000602082019050818103600083015261158c81611550565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006115ef602483611069565b91506115fa82611593565b604082019050919050565b6000602082019050818103600083015261161e816115e2565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611681602283611069565b915061168c82611625565b604082019050919050565b600060208201905081810360008301526116b081611674565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006116ed601d83611069565b91506116f8826116b7565b602082019050919050565b6000602082019050818103600083015261171c816116e0565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061177f602583611069565b915061178a82611723565b604082019050919050565b600060208201905081810360008301526117ae81611772565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611811602383611069565b915061181c826117b5565b604082019050919050565b6000602082019050818103600083015261184081611804565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006118a3602683611069565b91506118ae82611847565b604082019050919050565b600060208201905081810360008301526118d281611896565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611935602183611069565b9150611940826118d9565b604082019050919050565b6000602082019050818103600083015261196481611928565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006119c7602283611069565b91506119d28261196b565b604082019050919050565b600060208201905081810360008301526119f6816119ba565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611a33601f83611069565b9150611a3e826119fd565b602082019050919050565b60006020820190508181036000830152611a6281611a26565b905091905056fea26469706673582212204a7de346c47dc25b63f2c60df406b21f6ae47dae4c576b240d0f2eb19b5f8d2964736f6c63430008120033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b411461025d578063a457c2d71461027b578063a9059cbb146102ab578063dd62ed3e146102db576100ea565b806370a08231146101f557806374f4f547146102255780638c2a993e14610241576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806345494e3e146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761030b565b60405161010491906110ee565b60405180910390f35b610127600480360381019061012291906111a9565b61039d565b6040516101349190611204565b60405180910390f35b6101456103c0565b604051610152919061122e565b60405180910390f35b61017560048036038101906101709190611249565b6103ca565b6040516101829190611204565b60405180910390f35b6101936103f9565b6040516101a091906112b8565b60405180910390f35b6101c360048036038101906101be91906111a9565b610402565b6040516101d09190611204565b60405180910390f35b6101f360048036038101906101ee91906112d3565b610439565b005b61020f600480360381019061020a91906112d3565b61050b565b60405161021c919061122e565b60405180910390f35b61023f600480360381019061023a91906111a9565b610553565b005b61025b600480360381019061025691906111a9565b6105f1565b005b61026561068f565b60405161027291906110ee565b60405180910390f35b610295600480360381019061029091906111a9565b610721565b6040516102a29190611204565b60405180910390f35b6102c560048036038101906102c091906111a9565b610798565b6040516102d29190611204565b60405180910390f35b6102f560048036038101906102f09190611300565b6107bb565b604051610302919061122e565b60405180910390f35b60606003805461031a9061136f565b80601f01602080910402602001604051908101604052809291908181526020018280546103469061136f565b80156103935780601f1061036857610100808354040283529160200191610393565b820191906000526020600020905b81548152906001019060200180831161037657829003601f168201915b5050505050905090565b6000806103a8610842565b90506103b581858561084a565b600191505092915050565b6000600254905090565b6000806103d5610842565b90506103e2858285610a13565b6103ed858585610a9f565b60019150509392505050565b60006012905090565b60008061040d610842565b905061042e81858561041f85896107bb565b61042991906113cf565b61084a565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104be9061144f565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105da906114e1565b60405180910390fd5b6105ed8282610d15565b5050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610681576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610678906114e1565b60405180910390fd5b61068b8282610d23565b5050565b60606004805461069e9061136f565b80601f01602080910402602001604051908101604052809291908181526020018280546106ca9061136f565b80156107175780601f106106ec57610100808354040283529160200191610717565b820191906000526020600020905b8154815290600101906020018083116106fa57829003601f168201915b5050505050905090565b60008061072c610842565b9050600061073a82866107bb565b90508381101561077f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077690611573565b60405180910390fd5b61078c828686840361084a565b60019250505092915050565b6000806107a3610842565b90506107b0818585610a9f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b090611605565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610928576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091f90611697565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a06919061122e565b60405180910390a3505050565b6000610a1f84846107bb565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a995781811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290611703565b60405180910390fd5b610a98848484840361084a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0590611795565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7490611827565b60405180910390fd5b610b88838383610d31565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c05906118b9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cfc919061122e565b60405180910390a3610d0f848484610d36565b50505050565b610d1f8282610d3b565b5050565b610d2d8282610f08565b5050565b505050565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610daa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da19061194b565b60405180910390fd5b610db682600083610d31565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e33906119dd565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610eef919061122e565b60405180910390a3610f0383600084610d36565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6e90611a49565b60405180910390fd5b610f8360008383610d31565b8060026000828254610f9591906113cf565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611046919061122e565b60405180910390a361105a60008383610d36565b5050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561109857808201518184015260208101905061107d565b60008484015250505050565b6000601f19601f8301169050919050565b60006110c08261105e565b6110ca8185611069565b93506110da81856020860161107a565b6110e3816110a4565b840191505092915050565b6000602082019050818103600083015261110881846110b5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061114082611115565b9050919050565b61115081611135565b811461115b57600080fd5b50565b60008135905061116d81611147565b92915050565b6000819050919050565b61118681611173565b811461119157600080fd5b50565b6000813590506111a38161117d565b92915050565b600080604083850312156111c0576111bf611110565b5b60006111ce8582860161115e565b92505060206111df85828601611194565b9150509250929050565b60008115159050919050565b6111fe816111e9565b82525050565b600060208201905061121960008301846111f5565b92915050565b61122881611173565b82525050565b6000602082019050611243600083018461121f565b92915050565b60008060006060848603121561126257611261611110565b5b60006112708682870161115e565b93505060206112818682870161115e565b925050604061129286828701611194565b9150509250925092565b600060ff82169050919050565b6112b28161129c565b82525050565b60006020820190506112cd60008301846112a9565b92915050565b6000602082840312156112e9576112e8611110565b5b60006112f78482850161115e565b91505092915050565b6000806040838503121561131757611316611110565b5b60006113258582860161115e565b92505060206113368582860161115e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061138757607f821691505b60208210810361139a57611399611340565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113da82611173565b91506113e583611173565b92508282019050808211156113fd576113fc6113a0565b5b92915050565b7f61646472657373206e6f7420746865206f776e65720000000000000000000000600082015250565b6000611439601583611069565b915061144482611403565b602082019050919050565b600060208201905081810360008301526114688161142c565b9050919050565b7f43616e206f6e6c792062652063616c6c65642066726f6d20746865206272696460008201527f6765000000000000000000000000000000000000000000000000000000000000602082015250565b60006114cb602283611069565b91506114d68261146f565b604082019050919050565b600060208201905081810360008301526114fa816114be565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061155d602583611069565b915061156882611501565b604082019050919050565b6000602082019050818103600083015261158c81611550565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006115ef602483611069565b91506115fa82611593565b604082019050919050565b6000602082019050818103600083015261161e816115e2565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611681602283611069565b915061168c82611625565b604082019050919050565b600060208201905081810360008301526116b081611674565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006116ed601d83611069565b91506116f8826116b7565b602082019050919050565b6000602082019050818103600083015261171c816116e0565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061177f602583611069565b915061178a82611723565b604082019050919050565b600060208201905081810360008301526117ae81611772565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611811602383611069565b915061181c826117b5565b604082019050919050565b6000602082019050818103600083015261184081611804565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006118a3602683611069565b91506118ae82611847565b604082019050919050565b600060208201905081810360008301526118d281611896565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611935602183611069565b9150611940826118d9565b604082019050919050565b6000602082019050818103600083015261196481611928565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006119c7602283611069565b91506119d28261196b565b604082019050919050565b600060208201905081810360008301526119f6816119ba565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611a33601f83611069565b9150611a3e826119fd565b602082019050919050565b60006020820190508181036000830152611a6281611a26565b905091905056fea26469706673582212204a7de346c47dc25b63f2c60df406b21f6ae47dae4c576b240d0f2eb19b5f8d2964736f6c63430008120033",
      "linkReferences": {},
      "deployedLinkReferences": {},
      "devdoc": {
        "events": {
          "Approval(address,address,uint256)": {
            "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
          },
          "Transfer(address,address,uint256)": {
            "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
          }
        },
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "evm": {
        "bytecode": {
          "functionDebugData": {
            "@_2547": {
              "entryPoint": null,
              "id": 2547,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@_44": {
              "entryPoint": null,
              "id": 44,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "array_dataslot_t_string_storage": {
              "entryPoint": 380,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_length_t_string_memory_ptr": {
              "entryPoint": 222,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "clean_up_bytearray_end_slots_t_string_storage": {
              "entryPoint": 701,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "cleanup_t_uint256": {
              "entryPoint": 516,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "clear_storage_range_t_bytes1": {
              "entryPoint": 662,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "convert_t_uint256_to_t_uint256": {
              "entryPoint": 536,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
              "entryPoint": 856,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "divide_by_32_ceil": {
              "entryPoint": 401,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "extract_byte_array_length": {
              "entryPoint": 327,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "extract_used_part_and_set_length_of_short_byte_array": {
              "entryPoint": 826,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "identity": {
              "entryPoint": 526,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "mask_bytes_dynamic": {
              "entryPoint": 794,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "panic_error_0x22": {
              "entryPoint": 280,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x41": {
              "entryPoint": 233,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "prepare_store_t_uint256": {
              "entryPoint": 576,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "shift_left_dynamic": {
              "entryPoint": 417,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "shift_right_unsigned_dynamic": {
              "entryPoint": 781,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "storage_set_to_zero_t_uint256": {
              "entryPoint": 634,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "update_byte_slice_dynamic32": {
              "entryPoint": 430,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "update_storage_value_t_uint256_to_t_uint256": {
              "entryPoint": 586,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "zero_value_for_split_t_uint256": {
              "entryPoint": 629,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 1
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nodeType": "YulBlock",
                "src": "0:5231:10",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "66:40:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "77:22:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "93:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "87:5:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "87:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "77:6:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_length_t_string_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "49:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "59:6:10",
                        "type": ""
                      }
                    ],
                    "src": "7:99:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "140:152:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "157:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "160:77:10",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "150:88:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "150:88:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "254:1:10",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "257:4:10",
                                "type": "",
                                "value": "0x41"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "247:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "247:15:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "247:15:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "278:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "281:4:10",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "271:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "271:15:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "271:15:10"
                        }
                      ]
                    },
                    "name": "panic_error_0x41",
                    "nodeType": "YulFunctionDefinition",
                    "src": "112:180:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "326:152:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "343:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "346:77:10",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "336:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "336:88:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "336:88:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "440:1:10",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "443:4:10",
                                "type": "",
                                "value": "0x22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "433:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "433:15:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "433:15:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "464:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "467:4:10",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "457:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "457:15:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "457:15:10"
                        }
                      ]
                    },
                    "name": "panic_error_0x22",
                    "nodeType": "YulFunctionDefinition",
                    "src": "298:180:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "535:269:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "545:22:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "559:4:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "565:1:10",
                                "type": "",
                                "value": "2"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "555:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "555:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "545:6:10"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "576:38:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "606:4:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "612:1:10",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "602:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "602:12:10"
                          },
                          "variables": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nodeType": "YulTypedName",
                              "src": "580:18:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "653:51:10",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "667:27:10",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "681:6:10"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "689:4:10",
                                      "type": "",
                                      "value": "0x7f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "677:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "677:17:10"
                                },
                                "variableNames": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "667:6:10"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "633:18:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "626:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "626:26:10"
                          },
                          "nodeType": "YulIf",
                          "src": "623:81:10"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "756:42:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x22",
                                    "nodeType": "YulIdentifier",
                                    "src": "770:16:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "770:18:10"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "770:18:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "720:18:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "743:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "751:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "740:2:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "740:14:10"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "717:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "717:38:10"
                          },
                          "nodeType": "YulIf",
                          "src": "714:84:10"
                        }
                      ]
                    },
                    "name": "extract_byte_array_length",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nodeType": "YulTypedName",
                        "src": "519:4:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "528:6:10",
                        "type": ""
                      }
                    ],
                    "src": "484:320:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "864:87:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "874:11:10",
                          "value": {
                            "name": "ptr",
                            "nodeType": "YulIdentifier",
                            "src": "882:3:10"
                          },
                          "variableNames": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "874:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "902:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "905:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "895:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "895:14:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "895:14:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "918:26:10",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "936:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "939:4:10",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "keccak256",
                              "nodeType": "YulIdentifier",
                              "src": "926:9:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "926:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "918:4:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_dataslot_t_string_storage",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "ptr",
                        "nodeType": "YulTypedName",
                        "src": "851:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "data",
                        "nodeType": "YulTypedName",
                        "src": "859:4:10",
                        "type": ""
                      }
                    ],
                    "src": "810:141:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1001:49:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1011:33:10",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1029:5:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1036:2:10",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1025:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1025:14:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1041:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "1021:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1021:23:10"
                          },
                          "variableNames": [
                            {
                              "name": "result",
                              "nodeType": "YulIdentifier",
                              "src": "1011:6:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "divide_by_32_ceil",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "984:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "result",
                        "nodeType": "YulTypedName",
                        "src": "994:6:10",
                        "type": ""
                      }
                    ],
                    "src": "957:93:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1109:54:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1119:37:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "bits",
                                "nodeType": "YulIdentifier",
                                "src": "1144:4:10"
                              },
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1150:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1140:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1140:16:10"
                          },
                          "variableNames": [
                            {
                              "name": "newValue",
                              "nodeType": "YulIdentifier",
                              "src": "1119:8:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "shift_left_dynamic",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "bits",
                        "nodeType": "YulTypedName",
                        "src": "1084:4:10",
                        "type": ""
                      },
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1090:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "newValue",
                        "nodeType": "YulTypedName",
                        "src": "1100:8:10",
                        "type": ""
                      }
                    ],
                    "src": "1056:107:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1245:317:10",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "1255:35:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "shiftBytes",
                                "nodeType": "YulIdentifier",
                                "src": "1276:10:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1288:1:10",
                                "type": "",
                                "value": "8"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "1272:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1272:18:10"
                          },
                          "variables": [
                            {
                              "name": "shiftBits",
                              "nodeType": "YulTypedName",
                              "src": "1259:9:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "1299:109:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "shiftBits",
                                "nodeType": "YulIdentifier",
                                "src": "1330:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1341:66:10",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shift_left_dynamic",
                              "nodeType": "YulIdentifier",
                              "src": "1311:18:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1311:97:10"
                          },
                          "variables": [
                            {
                              "name": "mask",
                              "nodeType": "YulTypedName",
                              "src": "1303:4:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1417:51:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "shiftBits",
                                "nodeType": "YulIdentifier",
                                "src": "1448:9:10"
                              },
                              {
                                "name": "toInsert",
                                "nodeType": "YulIdentifier",
                                "src": "1459:8:10"
                              }
                            ],
                            "functionName": {
                              "name": "shift_left_dynamic",
                              "nodeType": "YulIdentifier",
                              "src": "1429:18:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1429:39:10"
                          },
                          "variableNames": [
                            {
                              "name": "toInsert",
                              "nodeType": "YulIdentifier",
                              "src": "1417:8:10"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1477:30:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1490:5:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "mask",
                                    "nodeType": "YulIdentifier",
                                    "src": "1501:4:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1497:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1497:9:10"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1486:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1486:21:10"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1477:5:10"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1516:40:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1529:5:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "toInsert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1540:8:10"
                                  },
                                  {
                                    "name": "mask",
                                    "nodeType": "YulIdentifier",
                                    "src": "1550:4:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1536:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1536:19:10"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nodeType": "YulIdentifier",
                              "src": "1526:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1526:30:10"
                          },
                          "variableNames": [
                            {
                              "name": "result",
                              "nodeType": "YulIdentifier",
                              "src": "1516:6:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "update_byte_slice_dynamic32",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1206:5:10",
                        "type": ""
                      },
                      {
                        "name": "shiftBytes",
                        "nodeType": "YulTypedName",
                        "src": "1213:10:10",
                        "type": ""
                      },
                      {
                        "name": "toInsert",
                        "nodeType": "YulTypedName",
                        "src": "1225:8:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "result",
                        "nodeType": "YulTypedName",
                        "src": "1238:6:10",
                        "type": ""
                      }
                    ],
                    "src": "1169:393:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1613:32:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1623:16:10",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1634:5:10"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "1623:7:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1595:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "1605:7:10",
                        "type": ""
                      }
                    ],
                    "src": "1568:77:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1683:28:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1693:12:10",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1700:5:10"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "1693:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "identity",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1669:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nodeType": "YulTypedName",
                        "src": "1679:3:10",
                        "type": ""
                      }
                    ],
                    "src": "1651:60:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1777:82:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1787:66:10",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1845:5:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1827:17:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1827:24:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "identity",
                                  "nodeType": "YulIdentifier",
                                  "src": "1818:8:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1818:34:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1800:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1800:53:10"
                          },
                          "variableNames": [
                            {
                              "name": "converted",
                              "nodeType": "YulIdentifier",
                              "src": "1787:9:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "convert_t_uint256_to_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1757:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "converted",
                        "nodeType": "YulTypedName",
                        "src": "1767:9:10",
                        "type": ""
                      }
                    ],
                    "src": "1717:142:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1912:28:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1922:12:10",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1929:5:10"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "1922:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "prepare_store_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1898:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nodeType": "YulTypedName",
                        "src": "1908:3:10",
                        "type": ""
                      }
                    ],
                    "src": "1865:75:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2022:193:10",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2032:63:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value_0",
                                "nodeType": "YulIdentifier",
                                "src": "2087:7:10"
                              }
                            ],
                            "functionName": {
                              "name": "convert_t_uint256_to_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2056:30:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2056:39:10"
                          },
                          "variables": [
                            {
                              "name": "convertedValue_0",
                              "nodeType": "YulTypedName",
                              "src": "2036:16:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "2111:4:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "slot",
                                        "nodeType": "YulIdentifier",
                                        "src": "2151:4:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2145:5:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2145:11:10"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2158:6:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "convertedValue_0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2190:16:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "prepare_store_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "2166:23:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2166:41:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "update_byte_slice_dynamic32",
                                  "nodeType": "YulIdentifier",
                                  "src": "2117:27:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2117:91:10"
                              }
                            ],
                            "functionName": {
                              "name": "sstore",
                              "nodeType": "YulIdentifier",
                              "src": "2104:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2104:105:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2104:105:10"
                        }
                      ]
                    },
                    "name": "update_storage_value_t_uint256_to_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "slot",
                        "nodeType": "YulTypedName",
                        "src": "1999:4:10",
                        "type": ""
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "2005:6:10",
                        "type": ""
                      },
                      {
                        "name": "value_0",
                        "nodeType": "YulTypedName",
                        "src": "2013:7:10",
                        "type": ""
                      }
                    ],
                    "src": "1946:269:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2270:24:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2280:8:10",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2287:1:10",
                            "type": "",
                            "value": "0"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "2280:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "zero_value_for_split_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nodeType": "YulTypedName",
                        "src": "2266:3:10",
                        "type": ""
                      }
                    ],
                    "src": "2221:73:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2353:136:10",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2363:46:10",
                          "value": {
                            "arguments": [],
                            "functionName": {
                              "name": "zero_value_for_split_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2377:30:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2377:32:10"
                          },
                          "variables": [
                            {
                              "name": "zero_0",
                              "nodeType": "YulTypedName",
                              "src": "2367:6:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "2462:4:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2468:6:10"
                              },
                              {
                                "name": "zero_0",
                                "nodeType": "YulIdentifier",
                                "src": "2476:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "update_storage_value_t_uint256_to_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2418:43:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2418:65:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2418:65:10"
                        }
                      ]
                    },
                    "name": "storage_set_to_zero_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "slot",
                        "nodeType": "YulTypedName",
                        "src": "2339:4:10",
                        "type": ""
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "2345:6:10",
                        "type": ""
                      }
                    ],
                    "src": "2300:189:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2545:136:10",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2612:63:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "start",
                                      "nodeType": "YulIdentifier",
                                      "src": "2656:5:10"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2663:1:10",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "storage_set_to_zero_t_uint256",
                                    "nodeType": "YulIdentifier",
                                    "src": "2626:29:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2626:39:10"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2626:39:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "start",
                                "nodeType": "YulIdentifier",
                                "src": "2565:5:10"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "2572:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "2562:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2562:14:10"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "2577:26:10",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "2579:22:10",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "start",
                                      "nodeType": "YulIdentifier",
                                      "src": "2592:5:10"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2599:1:10",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2588:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2588:13:10"
                                },
                                "variableNames": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "2579:5:10"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "2559:2:10",
                            "statements": []
                          },
                          "src": "2555:120:10"
                        }
                      ]
                    },
                    "name": "clear_storage_range_t_bytes1",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "start",
                        "nodeType": "YulTypedName",
                        "src": "2533:5:10",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "2540:3:10",
                        "type": ""
                      }
                    ],
                    "src": "2495:186:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2766:464:10",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2792:431:10",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "2806:54:10",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "array",
                                      "nodeType": "YulIdentifier",
                                      "src": "2854:5:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "array_dataslot_t_string_storage",
                                    "nodeType": "YulIdentifier",
                                    "src": "2822:31:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2822:38:10"
                                },
                                "variables": [
                                  {
                                    "name": "dataArea",
                                    "nodeType": "YulTypedName",
                                    "src": "2810:8:10",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "2873:63:10",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "dataArea",
                                      "nodeType": "YulIdentifier",
                                      "src": "2896:8:10"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nodeType": "YulIdentifier",
                                          "src": "2924:10:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "divide_by_32_ceil",
                                        "nodeType": "YulIdentifier",
                                        "src": "2906:17:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2906:29:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2892:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2892:44:10"
                                },
                                "variables": [
                                  {
                                    "name": "deleteStart",
                                    "nodeType": "YulTypedName",
                                    "src": "2877:11:10",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "3093:27:10",
                                  "statements": [
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "3095:23:10",
                                      "value": {
                                        "name": "dataArea",
                                        "nodeType": "YulIdentifier",
                                        "src": "3110:8:10"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "deleteStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "3095:11:10"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "startIndex",
                                      "nodeType": "YulIdentifier",
                                      "src": "3077:10:10"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3089:2:10",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "lt",
                                    "nodeType": "YulIdentifier",
                                    "src": "3074:2:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3074:18:10"
                                },
                                "nodeType": "YulIf",
                                "src": "3071:49:10"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "deleteStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3162:11:10"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "dataArea",
                                          "nodeType": "YulIdentifier",
                                          "src": "3179:8:10"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "len",
                                              "nodeType": "YulIdentifier",
                                              "src": "3207:3:10"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "divide_by_32_ceil",
                                            "nodeType": "YulIdentifier",
                                            "src": "3189:17:10"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3189:22:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3175:3:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3175:37:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "clear_storage_range_t_bytes1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3133:28:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3133:80:10"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3133:80:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "len",
                                "nodeType": "YulIdentifier",
                                "src": "2783:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2788:2:10",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "2780:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2780:11:10"
                          },
                          "nodeType": "YulIf",
                          "src": "2777:446:10"
                        }
                      ]
                    },
                    "name": "clean_up_bytearray_end_slots_t_string_storage",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "2742:5:10",
                        "type": ""
                      },
                      {
                        "name": "len",
                        "nodeType": "YulTypedName",
                        "src": "2749:3:10",
                        "type": ""
                      },
                      {
                        "name": "startIndex",
                        "nodeType": "YulTypedName",
                        "src": "2754:10:10",
                        "type": ""
                      }
                    ],
                    "src": "2687:543:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3299:54:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3309:37:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "bits",
                                "nodeType": "YulIdentifier",
                                "src": "3334:4:10"
                              },
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3340:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "shr",
                              "nodeType": "YulIdentifier",
                              "src": "3330:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3330:16:10"
                          },
                          "variableNames": [
                            {
                              "name": "newValue",
                              "nodeType": "YulIdentifier",
                              "src": "3309:8:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "shift_right_unsigned_dynamic",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "bits",
                        "nodeType": "YulTypedName",
                        "src": "3274:4:10",
                        "type": ""
                      },
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "3280:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "newValue",
                        "nodeType": "YulTypedName",
                        "src": "3290:8:10",
                        "type": ""
                      }
                    ],
                    "src": "3236:117:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3410:118:10",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3420:68:10",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3469:1:10",
                                        "type": "",
                                        "value": "8"
                                      },
                                      {
                                        "name": "bytes",
                                        "nodeType": "YulIdentifier",
                                        "src": "3472:5:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mul",
                                      "nodeType": "YulIdentifier",
                                      "src": "3465:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3465:13:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3484:1:10",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "3480:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3480:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "shift_right_unsigned_dynamic",
                                  "nodeType": "YulIdentifier",
                                  "src": "3436:28:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3436:51:10"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "3432:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3432:56:10"
                          },
                          "variables": [
                            {
                              "name": "mask",
                              "nodeType": "YulTypedName",
                              "src": "3424:4:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3497:25:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "3511:4:10"
                              },
                              {
                                "name": "mask",
                                "nodeType": "YulIdentifier",
                                "src": "3517:4:10"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3507:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3507:15:10"
                          },
                          "variableNames": [
                            {
                              "name": "result",
                              "nodeType": "YulIdentifier",
                              "src": "3497:6:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "mask_bytes_dynamic",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nodeType": "YulTypedName",
                        "src": "3387:4:10",
                        "type": ""
                      },
                      {
                        "name": "bytes",
                        "nodeType": "YulTypedName",
                        "src": "3393:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "result",
                        "nodeType": "YulTypedName",
                        "src": "3403:6:10",
                        "type": ""
                      }
                    ],
                    "src": "3359:169:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3614:214:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3747:37:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "3774:4:10"
                              },
                              {
                                "name": "len",
                                "nodeType": "YulIdentifier",
                                "src": "3780:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "mask_bytes_dynamic",
                              "nodeType": "YulIdentifier",
                              "src": "3755:18:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3755:29:10"
                          },
                          "variableNames": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "3747:4:10"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3793:29:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "3804:4:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3814:1:10",
                                    "type": "",
                                    "value": "2"
                                  },
                                  {
                                    "name": "len",
                                    "nodeType": "YulIdentifier",
                                    "src": "3817:3:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "3810:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3810:11:10"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nodeType": "YulIdentifier",
                              "src": "3801:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3801:21:10"
                          },
                          "variableNames": [
                            {
                              "name": "used",
                              "nodeType": "YulIdentifier",
                              "src": "3793:4:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nodeType": "YulTypedName",
                        "src": "3595:4:10",
                        "type": ""
                      },
                      {
                        "name": "len",
                        "nodeType": "YulTypedName",
                        "src": "3601:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "used",
                        "nodeType": "YulTypedName",
                        "src": "3609:4:10",
                        "type": ""
                      }
                    ],
                    "src": "3533:295:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3925:1303:10",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3936:51:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "3983:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "array_length_t_string_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "3950:32:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3950:37:10"
                          },
                          "variables": [
                            {
                              "name": "newLen",
                              "nodeType": "YulTypedName",
                              "src": "3940:6:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4072:22:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "4074:16:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4074:18:10"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4074:18:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "newLen",
                                "nodeType": "YulIdentifier",
                                "src": "4044:6:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4052:18:10",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "4041:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4041:30:10"
                          },
                          "nodeType": "YulIf",
                          "src": "4038:56:10"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4104:52:10",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "4150:4:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4144:5:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4144:11:10"
                              }
                            ],
                            "functionName": {
                              "name": "extract_byte_array_length",
                              "nodeType": "YulIdentifier",
                              "src": "4118:25:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4118:38:10"
                          },
                          "variables": [
                            {
                              "name": "oldLen",
                              "nodeType": "YulTypedName",
                              "src": "4108:6:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "4249:4:10"
                              },
                              {
                                "name": "oldLen",
                                "nodeType": "YulIdentifier",
                                "src": "4255:6:10"
                              },
                              {
                                "name": "newLen",
                                "nodeType": "YulIdentifier",
                                "src": "4263:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "clean_up_bytearray_end_slots_t_string_storage",
                              "nodeType": "YulIdentifier",
                              "src": "4203:45:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4203:67:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4203:67:10"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4280:18:10",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4297:1:10",
                            "type": "",
                            "value": "0"
                          },
                          "variables": [
                            {
                              "name": "srcOffset",
                              "nodeType": "YulTypedName",
                              "src": "4284:9:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4308:17:10",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4321:4:10",
                            "type": "",
                            "value": "0x20"
                          },
                          "variableNames": [
                            {
                              "name": "srcOffset",
                              "nodeType": "YulIdentifier",
                              "src": "4308:9:10"
                            }
                          ]
                        },
                        {
                          "cases": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4372:611:10",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "4386:37:10",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "4405:6:10"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4417:4:10",
                                              "type": "",
                                              "value": "0x1f"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "not",
                                            "nodeType": "YulIdentifier",
                                            "src": "4413:3:10"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4413:9:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "4401:3:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4401:22:10"
                                    },
                                    "variables": [
                                      {
                                        "name": "loopEnd",
                                        "nodeType": "YulTypedName",
                                        "src": "4390:7:10",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "4437:51:10",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "slot",
                                          "nodeType": "YulIdentifier",
                                          "src": "4483:4:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_dataslot_t_string_storage",
                                        "nodeType": "YulIdentifier",
                                        "src": "4451:31:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4451:37:10"
                                    },
                                    "variables": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulTypedName",
                                        "src": "4441:6:10",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "4501:10:10",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4510:1:10",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "4505:1:10",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "4569:163:10",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "dstPtr",
                                                "nodeType": "YulIdentifier",
                                                "src": "4594:6:10"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4612:3:10"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4617:9:10"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4608:3:10"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4608:19:10"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4602:5:10"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "4602:26:10"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "4587:6:10"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4587:42:10"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "4587:42:10"
                                        },
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "4646:24:10",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "dstPtr",
                                                "nodeType": "YulIdentifier",
                                                "src": "4660:6:10"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4668:1:10",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "4656:3:10"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4656:14:10"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "dstPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "4646:6:10"
                                            }
                                          ]
                                        },
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "4687:31:10",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "4704:9:10"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4715:2:10",
                                                "type": "",
                                                "value": "32"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "4700:3:10"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4700:18:10"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "srcOffset",
                                              "nodeType": "YulIdentifier",
                                              "src": "4687:9:10"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "4535:1:10"
                                        },
                                        {
                                          "name": "loopEnd",
                                          "nodeType": "YulIdentifier",
                                          "src": "4538:7:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "4532:2:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4532:14:10"
                                    },
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nodeType": "YulBlock",
                                      "src": "4547:21:10",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "4549:17:10",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "i",
                                                "nodeType": "YulIdentifier",
                                                "src": "4558:1:10"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4561:4:10",
                                                "type": "",
                                                "value": "0x20"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "4554:3:10"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4554:12:10"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "4549:1:10"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nodeType": "YulBlock",
                                      "src": "4528:3:10",
                                      "statements": []
                                    },
                                    "src": "4524:208:10"
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "4768:156:10",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "4786:43:10",
                                          "value": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "src",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4813:3:10"
                                                  },
                                                  {
                                                    "name": "srcOffset",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4818:9:10"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4809:3:10"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "4809:19:10"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "4803:5:10"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4803:26:10"
                                          },
                                          "variables": [
                                            {
                                              "name": "lastValue",
                                              "nodeType": "YulTypedName",
                                              "src": "4790:9:10",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "dstPtr",
                                                "nodeType": "YulIdentifier",
                                                "src": "4853:6:10"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "lastValue",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4880:9:10"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "newLen",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4895:6:10"
                                                      },
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "4903:4:10",
                                                        "type": "",
                                                        "value": "0x1f"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4891:3:10"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4891:17:10"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mask_bytes_dynamic",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4861:18:10"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "4861:48:10"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "4846:6:10"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4846:64:10"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "4846:64:10"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "loopEnd",
                                          "nodeType": "YulIdentifier",
                                          "src": "4751:7:10"
                                        },
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "4760:6:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "4748:2:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4748:19:10"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "4745:179:10"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "slot",
                                          "nodeType": "YulIdentifier",
                                          "src": "4944:4:10"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "newLen",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4958:6:10"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "4966:1:10",
                                                  "type": "",
                                                  "value": "2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mul",
                                                "nodeType": "YulIdentifier",
                                                "src": "4954:3:10"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4954:14:10"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4970:1:10",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4950:3:10"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4950:22:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4937:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4937:36:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4937:36:10"
                                  }
                                ]
                              },
                              "nodeType": "YulCase",
                              "src": "4365:618:10",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4370:1:10",
                                "type": "",
                                "value": "1"
                              }
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5000:222:10",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5014:14:10",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5027:1:10",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulTypedName",
                                        "src": "5018:5:10",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "5051:67:10",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "5069:35:10",
                                          "value": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "src",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5088:3:10"
                                                  },
                                                  {
                                                    "name": "srcOffset",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5093:9:10"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5084:3:10"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "5084:19:10"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "5078:5:10"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5078:26:10"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "value",
                                              "nodeType": "YulIdentifier",
                                              "src": "5069:5:10"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "5044:6:10"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "5041:77:10"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "slot",
                                          "nodeType": "YulIdentifier",
                                          "src": "5138:4:10"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "value",
                                              "nodeType": "YulIdentifier",
                                              "src": "5197:5:10"
                                            },
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "5204:6:10"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "extract_used_part_and_set_length_of_short_byte_array",
                                            "nodeType": "YulIdentifier",
                                            "src": "5144:52:10"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5144:67:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5131:6:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5131:81:10"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5131:81:10"
                                  }
                                ]
                              },
                              "nodeType": "YulCase",
                              "src": "4992:230:10",
                              "value": "default"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "name": "newLen",
                                "nodeType": "YulIdentifier",
                                "src": "4345:6:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4353:2:10",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "4342:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4342:14:10"
                          },
                          "nodeType": "YulSwitch",
                          "src": "4335:887:10"
                        }
                      ]
                    },
                    "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "slot",
                        "nodeType": "YulTypedName",
                        "src": "3914:4:10",
                        "type": ""
                      },
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "3920:3:10",
                        "type": ""
                      }
                    ],
                    "src": "3833:1395:10"
                  }
                ]
              },
              "contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
              "id": 10,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "linkReferences": {},
          "object": "60a06040523480156200001157600080fd5b506040518060400160405280600581526020017f546f6b656e0000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f544f4b000000000000000000000000000000000000000000000000000000000081525081600390816200008f919062000358565b508060049081620000a1919062000358565b5050503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506200043f565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200016057607f821691505b60208210810362000176576200017562000118565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001e07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001a1565b620001ec8683620001a1565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000239620002336200022d8462000204565b6200020e565b62000204565b9050919050565b6000819050919050565b620002558362000218565b6200026d620002648262000240565b848454620001ae565b825550505050565b600090565b6200028462000275565b620002918184846200024a565b505050565b5b81811015620002b957620002ad6000826200027a565b60018101905062000297565b5050565b601f8211156200030857620002d2816200017c565b620002dd8462000191565b81016020851015620002ed578190505b62000305620002fc8562000191565b83018262000296565b50505b505050565b600082821c905092915050565b60006200032d600019846008026200030d565b1980831691505092915050565b60006200034883836200031a565b9150826002028217905092915050565b6200036382620000de565b67ffffffffffffffff8111156200037f576200037e620000e9565b5b6200038b825462000147565b62000398828285620002bd565b600060209050601f831160018114620003d05760008415620003bb578287015190505b620003c785826200033a565b86555062000437565b601f198416620003e0866200017c565b60005b828110156200040a57848901518255600182019150602085019450602081019050620003e3565b868310156200042a578489015162000426601f8916826200031a565b8355505b6001600288020188555050505b505050505050565b608051611a9f6200045b600039600061043b0152611a9f6000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b411461025d578063a457c2d71461027b578063a9059cbb146102ab578063dd62ed3e146102db576100ea565b806370a08231146101f557806374f4f547146102255780638c2a993e14610241576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806345494e3e146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761030b565b60405161010491906110ee565b60405180910390f35b610127600480360381019061012291906111a9565b61039d565b6040516101349190611204565b60405180910390f35b6101456103c0565b604051610152919061122e565b60405180910390f35b61017560048036038101906101709190611249565b6103ca565b6040516101829190611204565b60405180910390f35b6101936103f9565b6040516101a091906112b8565b60405180910390f35b6101c360048036038101906101be91906111a9565b610402565b6040516101d09190611204565b60405180910390f35b6101f360048036038101906101ee91906112d3565b610439565b005b61020f600480360381019061020a91906112d3565b61050b565b60405161021c919061122e565b60405180910390f35b61023f600480360381019061023a91906111a9565b610553565b005b61025b600480360381019061025691906111a9565b6105f1565b005b61026561068f565b60405161027291906110ee565b60405180910390f35b610295600480360381019061029091906111a9565b610721565b6040516102a29190611204565b60405180910390f35b6102c560048036038101906102c091906111a9565b610798565b6040516102d29190611204565b60405180910390f35b6102f560048036038101906102f09190611300565b6107bb565b604051610302919061122e565b60405180910390f35b60606003805461031a9061136f565b80601f01602080910402602001604051908101604052809291908181526020018280546103469061136f565b80156103935780601f1061036857610100808354040283529160200191610393565b820191906000526020600020905b81548152906001019060200180831161037657829003601f168201915b5050505050905090565b6000806103a8610842565b90506103b581858561084a565b600191505092915050565b6000600254905090565b6000806103d5610842565b90506103e2858285610a13565b6103ed858585610a9f565b60019150509392505050565b60006012905090565b60008061040d610842565b905061042e81858561041f85896107bb565b61042991906113cf565b61084a565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104be9061144f565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105da906114e1565b60405180910390fd5b6105ed8282610d15565b5050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610681576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610678906114e1565b60405180910390fd5b61068b8282610d23565b5050565b60606004805461069e9061136f565b80601f01602080910402602001604051908101604052809291908181526020018280546106ca9061136f565b80156107175780601f106106ec57610100808354040283529160200191610717565b820191906000526020600020905b8154815290600101906020018083116106fa57829003601f168201915b5050505050905090565b60008061072c610842565b9050600061073a82866107bb565b90508381101561077f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077690611573565b60405180910390fd5b61078c828686840361084a565b60019250505092915050565b6000806107a3610842565b90506107b0818585610a9f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b090611605565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610928576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091f90611697565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a06919061122e565b60405180910390a3505050565b6000610a1f84846107bb565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a995781811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290611703565b60405180910390fd5b610a98848484840361084a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0590611795565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7490611827565b60405180910390fd5b610b88838383610d31565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c05906118b9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cfc919061122e565b60405180910390a3610d0f848484610d36565b50505050565b610d1f8282610d3b565b5050565b610d2d8282610f08565b5050565b505050565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610daa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da19061194b565b60405180910390fd5b610db682600083610d31565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e33906119dd565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610eef919061122e565b60405180910390a3610f0383600084610d36565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6e90611a49565b60405180910390fd5b610f8360008383610d31565b8060026000828254610f9591906113cf565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611046919061122e565b60405180910390a361105a60008383610d36565b5050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561109857808201518184015260208101905061107d565b60008484015250505050565b6000601f19601f8301169050919050565b60006110c08261105e565b6110ca8185611069565b93506110da81856020860161107a565b6110e3816110a4565b840191505092915050565b6000602082019050818103600083015261110881846110b5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061114082611115565b9050919050565b61115081611135565b811461115b57600080fd5b50565b60008135905061116d81611147565b92915050565b6000819050919050565b61118681611173565b811461119157600080fd5b50565b6000813590506111a38161117d565b92915050565b600080604083850312156111c0576111bf611110565b5b60006111ce8582860161115e565b92505060206111df85828601611194565b9150509250929050565b60008115159050919050565b6111fe816111e9565b82525050565b600060208201905061121960008301846111f5565b92915050565b61122881611173565b82525050565b6000602082019050611243600083018461121f565b92915050565b60008060006060848603121561126257611261611110565b5b60006112708682870161115e565b93505060206112818682870161115e565b925050604061129286828701611194565b9150509250925092565b600060ff82169050919050565b6112b28161129c565b82525050565b60006020820190506112cd60008301846112a9565b92915050565b6000602082840312156112e9576112e8611110565b5b60006112f78482850161115e565b91505092915050565b6000806040838503121561131757611316611110565b5b60006113258582860161115e565b92505060206113368582860161115e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061138757607f821691505b60208210810361139a57611399611340565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113da82611173565b91506113e583611173565b92508282019050808211156113fd576113fc6113a0565b5b92915050565b7f61646472657373206e6f7420746865206f776e65720000000000000000000000600082015250565b6000611439601583611069565b915061144482611403565b602082019050919050565b600060208201905081810360008301526114688161142c565b9050919050565b7f43616e206f6e6c792062652063616c6c65642066726f6d20746865206272696460008201527f6765000000000000000000000000000000000000000000000000000000000000602082015250565b60006114cb602283611069565b91506114d68261146f565b604082019050919050565b600060208201905081810360008301526114fa816114be565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061155d602583611069565b915061156882611501565b604082019050919050565b6000602082019050818103600083015261158c81611550565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006115ef602483611069565b91506115fa82611593565b604082019050919050565b6000602082019050818103600083015261161e816115e2565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611681602283611069565b915061168c82611625565b604082019050919050565b600060208201905081810360008301526116b081611674565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006116ed601d83611069565b91506116f8826116b7565b602082019050919050565b6000602082019050818103600083015261171c816116e0565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061177f602583611069565b915061178a82611723565b604082019050919050565b600060208201905081810360008301526117ae81611772565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611811602383611069565b915061181c826117b5565b604082019050919050565b6000602082019050818103600083015261184081611804565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006118a3602683611069565b91506118ae82611847565b604082019050919050565b600060208201905081810360008301526118d281611896565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611935602183611069565b9150611940826118d9565b604082019050919050565b6000602082019050818103600083015261196481611928565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006119c7602283611069565b91506119d28261196b565b604082019050919050565b600060208201905081810360008301526119f6816119ba565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611a33601f83611069565b9150611a3e826119fd565b602082019050919050565b60006020820190508181036000830152611a6281611a26565b905091905056fea26469706673582212204a7de346c47dc25b63f2c60df406b21f6ae47dae4c576b240d0f2eb19b5f8d2964736f6c63430008120033",
          "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x546F6B656E000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x544F4B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x8F SWAP2 SWAP1 PUSH3 0x358 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x358 JUMP JUMPDEST POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH3 0x43F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x160 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x176 JUMPI PUSH3 0x175 PUSH3 0x118 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x1E0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x1A1 JUMP JUMPDEST PUSH3 0x1EC DUP7 DUP4 PUSH3 0x1A1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x239 PUSH3 0x233 PUSH3 0x22D DUP5 PUSH3 0x204 JUMP JUMPDEST PUSH3 0x20E JUMP JUMPDEST PUSH3 0x204 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x255 DUP4 PUSH3 0x218 JUMP JUMPDEST PUSH3 0x26D PUSH3 0x264 DUP3 PUSH3 0x240 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x1AE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x284 PUSH3 0x275 JUMP JUMPDEST PUSH3 0x291 DUP2 DUP5 DUP5 PUSH3 0x24A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2B9 JUMPI PUSH3 0x2AD PUSH1 0x0 DUP3 PUSH3 0x27A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x297 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x308 JUMPI PUSH3 0x2D2 DUP2 PUSH3 0x17C JUMP JUMPDEST PUSH3 0x2DD DUP5 PUSH3 0x191 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2ED JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x305 PUSH3 0x2FC DUP6 PUSH3 0x191 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x296 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x32D PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x30D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x348 DUP4 DUP4 PUSH3 0x31A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x363 DUP3 PUSH3 0xDE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x37F JUMPI PUSH3 0x37E PUSH3 0xE9 JUMP JUMPDEST JUMPDEST PUSH3 0x38B DUP3 SLOAD PUSH3 0x147 JUMP JUMPDEST PUSH3 0x398 DUP3 DUP3 DUP6 PUSH3 0x2BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3D0 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x3BB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x3C7 DUP6 DUP3 PUSH3 0x33A JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x437 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x3E0 DUP7 PUSH3 0x17C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x40A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x3E3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x42A JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x426 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x31A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1A9F PUSH3 0x45B PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x43B ADD MSTORE PUSH2 0x1A9F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2DB JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x74F4F547 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x8C2A993E EQ PUSH2 0x241 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x45494E3E EQ PUSH2 0x1D9 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x12D3 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x12D3 JUMP JUMPDEST PUSH2 0x50B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x5F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x265 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1300 JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x31A SWAP1 PUSH2 0x136F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x346 SWAP1 PUSH2 0x136F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x393 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x368 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x393 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x376 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3A8 PUSH2 0x842 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B5 DUP2 DUP6 DUP6 PUSH2 0x84A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3D5 PUSH2 0x842 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E2 DUP6 DUP3 DUP6 PUSH2 0xA13 JUMP JUMPDEST PUSH2 0x3ED DUP6 DUP6 DUP6 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x40D PUSH2 0x842 JUMP JUMPDEST SWAP1 POP PUSH2 0x42E DUP2 DUP6 DUP6 PUSH2 0x41F DUP6 DUP10 PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BE SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DA SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5ED DUP3 DUP3 PUSH2 0xD15 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x681 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x678 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68B DUP3 DUP3 PUSH2 0xD23 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x69E SWAP1 PUSH2 0x136F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6CA SWAP1 PUSH2 0x136F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x717 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x717 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6FA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x72C PUSH2 0x842 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x73A DUP3 DUP7 PUSH2 0x7BB JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x84A JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7A3 PUSH2 0x842 JUMP JUMPDEST SWAP1 POP PUSH2 0x7B0 DUP2 DUP6 DUP6 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP1 PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x928 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91F SWAP1 PUSH2 0x1697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA06 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1F DUP5 DUP5 PUSH2 0x7BB JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA99 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA82 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA98 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x84A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB05 SWAP1 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB74 SWAP1 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB88 DUP4 DUP4 DUP4 PUSH2 0xD31 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC05 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xCFC SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xD0F DUP5 DUP5 DUP5 PUSH2 0xD36 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD1F DUP3 DUP3 PUSH2 0xD3B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD2D DUP3 DUP3 PUSH2 0xF08 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA1 SWAP1 PUSH2 0x194B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB6 DUP3 PUSH1 0x0 DUP4 PUSH2 0xD31 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE33 SWAP1 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xEEF SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xF03 DUP4 PUSH1 0x0 DUP5 PUSH2 0xD36 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6E SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF83 PUSH1 0x0 DUP4 DUP4 PUSH2 0xD31 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF95 SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1046 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x105A PUSH1 0x0 DUP4 DUP4 PUSH2 0xD36 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1098 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x107D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C0 DUP3 PUSH2 0x105E JUMP JUMPDEST PUSH2 0x10CA DUP2 DUP6 PUSH2 0x1069 JUMP JUMPDEST SWAP4 POP PUSH2 0x10DA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x107A JUMP JUMPDEST PUSH2 0x10E3 DUP2 PUSH2 0x10A4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1108 DUP2 DUP5 PUSH2 0x10B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1140 DUP3 PUSH2 0x1115 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1150 DUP2 PUSH2 0x1135 JUMP JUMPDEST DUP2 EQ PUSH2 0x115B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116D DUP2 PUSH2 0x1147 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1186 DUP2 PUSH2 0x1173 JUMP JUMPDEST DUP2 EQ PUSH2 0x1191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11A3 DUP2 PUSH2 0x117D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11C0 JUMPI PUSH2 0x11BF PUSH2 0x1110 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11CE DUP6 DUP3 DUP7 ADD PUSH2 0x115E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11DF DUP6 DUP3 DUP7 ADD PUSH2 0x1194 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11FE DUP2 PUSH2 0x11E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1219 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1228 DUP2 PUSH2 0x1173 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1243 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x121F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1262 JUMPI PUSH2 0x1261 PUSH2 0x1110 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1270 DUP7 DUP3 DUP8 ADD PUSH2 0x115E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1281 DUP7 DUP3 DUP8 ADD PUSH2 0x115E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1292 DUP7 DUP3 DUP8 ADD PUSH2 0x1194 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B2 DUP2 PUSH2 0x129C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12CD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E9 JUMPI PUSH2 0x12E8 PUSH2 0x1110 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12F7 DUP5 DUP3 DUP6 ADD PUSH2 0x115E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1317 JUMPI PUSH2 0x1316 PUSH2 0x1110 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1325 DUP6 DUP3 DUP7 ADD PUSH2 0x115E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1336 DUP6 DUP3 DUP7 ADD PUSH2 0x115E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1387 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x139A JUMPI PUSH2 0x1399 PUSH2 0x1340 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13DA DUP3 PUSH2 0x1173 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E5 DUP4 PUSH2 0x1173 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x13FD JUMPI PUSH2 0x13FC PUSH2 0x13A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x61646472657373206E6F7420746865206F776E65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1439 PUSH1 0x15 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x1444 DUP3 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1468 DUP2 PUSH2 0x142C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E206F6E6C792062652063616C6C65642066726F6D207468652062726964 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6765000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14CB PUSH1 0x22 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x14D6 DUP3 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14FA DUP2 PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155D PUSH1 0x25 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x1568 DUP3 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x158C DUP2 PUSH2 0x1550 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15EF PUSH1 0x24 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x15FA DUP3 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x161E DUP2 PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1681 PUSH1 0x22 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x168C DUP3 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16B0 DUP2 PUSH2 0x1674 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16ED PUSH1 0x1D DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x16F8 DUP3 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x171C DUP2 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x177F PUSH1 0x25 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x178A DUP3 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17AE DUP2 PUSH2 0x1772 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1811 PUSH1 0x23 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x181C DUP3 PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1840 DUP2 PUSH2 0x1804 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A3 PUSH1 0x26 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x18AE DUP3 PUSH2 0x1847 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18D2 DUP2 PUSH2 0x1896 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1935 PUSH1 0x21 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x1940 DUP3 PUSH2 0x18D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1964 DUP2 PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C7 PUSH1 0x22 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x19D2 DUP3 PUSH2 0x196B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19F6 DUP2 PUSH2 0x19BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A33 PUSH1 0x1F DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3E DUP3 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A62 DUP2 PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A PUSH30 0xE346C47DC25B63F2C60DF406B21F6AE47DAE4C576B240D0F2EB19B5F8D29 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
          "sourceMap": "116:1278:9:-:0;;;146:71;;;;;;;;;;1980:113:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:5;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;200:10:9::1;192:18;;;;;;;;::::0;::::1;116:1278:::0;;7:99:10;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;116:1278:9:-;;;;;;;;;;;;;"
        },
        "deployedBytecode": {
          "functionDebugData": {
            "@_afterTokenTransfer_585": {
              "entryPoint": 3382,
              "id": 585,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_approve_520": {
              "entryPoint": 2122,
              "id": 520,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_beforeTokenTransfer_574": {
              "entryPoint": 3377,
              "id": 574,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_burn_2619": {
              "entryPoint": 3349,
              "id": 2619,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_burn_475": {
              "entryPoint": 3387,
              "id": 475,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_mint_2603": {
              "entryPoint": 3363,
              "id": 2603,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_mint_403": {
              "entryPoint": 3848,
              "id": 403,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_msgSender_701": {
              "entryPoint": 2114,
              "id": 701,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@_spendAllowance_563": {
              "entryPoint": 2579,
              "id": 563,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_transfer_346": {
              "entryPoint": 2719,
              "id": 346,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@addTokenBridgeAddress_2587": {
              "entryPoint": 1081,
              "id": 2587,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@allowance_141": {
              "entryPoint": 1979,
              "id": 141,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@approve_166": {
              "entryPoint": 925,
              "id": 166,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@balanceOf_98": {
              "entryPoint": 1291,
              "id": 98,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@bridgeBurn_2649": {
              "entryPoint": 1363,
              "id": 2649,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@bridgeMint_2634": {
              "entryPoint": 1521,
              "id": 2634,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@decimals_74": {
              "entryPoint": 1017,
              "id": 74,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@decreaseAllowance_269": {
              "entryPoint": 1825,
              "id": 269,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@increaseAllowance_228": {
              "entryPoint": 1026,
              "id": 228,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@name_54": {
              "entryPoint": 779,
              "id": 54,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@symbol_64": {
              "entryPoint": 1679,
              "id": 64,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@totalSupply_84": {
              "entryPoint": 960,
              "id": 84,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@transferFrom_199": {
              "entryPoint": 970,
              "id": 199,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "@transfer_123": {
              "entryPoint": 1944,
              "id": 123,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_address": {
              "entryPoint": 4446,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_uint256": {
              "entryPoint": 4500,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_address": {
              "entryPoint": 4819,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_addresst_address": {
              "entryPoint": 4864,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_addresst_addresst_uint256": {
              "entryPoint": 4681,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 3
            },
            "abi_decode_tuple_t_addresst_uint256": {
              "entryPoint": 4521,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_encode_t_bool_to_t_bool_fromStack": {
              "entryPoint": 4597,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 4277,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_0118c645f8a1518ac56d8bfae5a844b2a842eecb5e0f52f98bcb2323f92c00c5_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 5164,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 6148,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 6586,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 5748,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 5856,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 6294,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_8a233b79c0c4bed7e2dcc770998a6d9a6084c5b7b7ae44e120fb2c7790bd0180_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 5310,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 6440,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 6002,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 5602,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 5456,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 6694,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_uint256_to_t_uint256_fromStack": {
              "entryPoint": 4639,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_uint8_to_t_uint8_fromStack": {
              "entryPoint": 4777,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
              "entryPoint": 4612,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 4334,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_0118c645f8a1518ac56d8bfae5a844b2a842eecb5e0f52f98bcb2323f92c00c5__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 5199,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 6183,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 6621,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 5783,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 5891,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 6329,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_8a233b79c0c4bed7e2dcc770998a6d9a6084c5b7b7ae44e120fb2c7790bd0180__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 5345,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 6475,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 6037,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 5637,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 5491,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 6729,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
              "entryPoint": 4654,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
              "entryPoint": 4792,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "allocate_unbounded": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "array_length_t_string_memory_ptr": {
              "entryPoint": 4190,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
              "entryPoint": 4201,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_add_t_uint256": {
              "entryPoint": 5071,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "cleanup_t_address": {
              "entryPoint": 4405,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_bool": {
              "entryPoint": 4585,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint160": {
              "entryPoint": 4373,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint256": {
              "entryPoint": 4467,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint8": {
              "entryPoint": 4764,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "copy_memory_to_memory_with_cleanup": {
              "entryPoint": 4218,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "extract_byte_array_length": {
              "entryPoint": 4975,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "panic_error_0x11": {
              "entryPoint": 5024,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x22": {
              "entryPoint": 4928,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
              "entryPoint": 4368,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "round_up_to_mul_of_32": {
              "entryPoint": 4260,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "store_literal_in_memory_0118c645f8a1518ac56d8bfae5a844b2a842eecb5e0f52f98bcb2323f92c00c5": {
              "entryPoint": 5123,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
              "entryPoint": 6069,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd": {
              "entryPoint": 6507,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
              "entryPoint": 5669,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
              "entryPoint": 5815,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
              "entryPoint": 6215,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_8a233b79c0c4bed7e2dcc770998a6d9a6084c5b7b7ae44e120fb2c7790bd0180": {
              "entryPoint": 5231,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f": {
              "entryPoint": 6361,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
              "entryPoint": 5923,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
              "entryPoint": 5523,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
              "entryPoint": 5377,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e": {
              "entryPoint": 6653,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "validator_revert_t_address": {
              "entryPoint": 4423,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "validator_revert_t_uint256": {
              "entryPoint": 4477,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nodeType": "YulBlock",
                "src": "0:18728:10",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "66:40:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "77:22:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "93:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "87:5:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "87:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "77:6:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_length_t_string_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "49:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "59:6:10",
                        "type": ""
                      }
                    ],
                    "src": "7:99:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "208:73:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "225:3:10"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "230:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "218:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "218:19:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "218:19:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "246:29:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "265:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "270:4:10",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "261:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "261:14:10"
                          },
                          "variableNames": [
                            {
                              "name": "updated_pos",
                              "nodeType": "YulIdentifier",
                              "src": "246:11:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "180:3:10",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "185:6:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "updated_pos",
                        "nodeType": "YulTypedName",
                        "src": "196:11:10",
                        "type": ""
                      }
                    ],
                    "src": "112:169:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "349:184:10",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "359:10:10",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "368:1:10",
                            "type": "",
                            "value": "0"
                          },
                          "variables": [
                            {
                              "name": "i",
                              "nodeType": "YulTypedName",
                              "src": "363:1:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "428:63:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "453:3:10"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "458:1:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "449:3:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "449:11:10"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "472:3:10"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "477:1:10"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "468:3:10"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "468:11:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "462:5:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "462:18:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "442:6:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "442:39:10"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "442:39:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "389:1:10"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "392:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "386:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "386:13:10"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "400:19:10",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "402:15:10",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "411:1:10"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "414:2:10",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "407:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "407:10:10"
                                },
                                "variableNames": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "402:1:10"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "382:3:10",
                            "statements": []
                          },
                          "src": "378:113:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "511:3:10"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "516:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "507:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "507:16:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "525:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "500:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "500:27:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "500:27:10"
                        }
                      ]
                    },
                    "name": "copy_memory_to_memory_with_cleanup",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "331:3:10",
                        "type": ""
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulTypedName",
                        "src": "336:3:10",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "341:6:10",
                        "type": ""
                      }
                    ],
                    "src": "287:246:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "587:54:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "597:38:10",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "615:5:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "622:2:10",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "611:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "611:14:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "631:2:10",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "627:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "627:7:10"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "607:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "607:28:10"
                          },
                          "variableNames": [
                            {
                              "name": "result",
                              "nodeType": "YulIdentifier",
                              "src": "597:6:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "round_up_to_mul_of_32",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "570:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "result",
                        "nodeType": "YulTypedName",
                        "src": "580:6:10",
                        "type": ""
                      }
                    ],
                    "src": "539:102:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "739:285:10",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "749:53:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "796:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "array_length_t_string_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "763:32:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "763:39:10"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "753:6:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "811:78:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "877:3:10"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "882:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "818:58:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "818:71:10"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "811:3:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "937:5:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "944:4:10",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "933:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "933:16:10"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "951:3:10"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "956:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory_with_cleanup",
                              "nodeType": "YulIdentifier",
                              "src": "898:34:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "898:65:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "898:65:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "972:46:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "983:3:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1010:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "round_up_to_mul_of_32",
                                  "nodeType": "YulIdentifier",
                                  "src": "988:21:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "988:29:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "979:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "979:39:10"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "972:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "720:5:10",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "727:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "735:3:10",
                        "type": ""
                      }
                    ],
                    "src": "647:377:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1148:195:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1158:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1170:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1181:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1166:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1166:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "1158:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1205:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1216:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1201:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1201:17:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "1224:4:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1230:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1220:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1220:20:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "1194:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1194:47:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1194:47:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1250:86:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1322:6:10"
                              },
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "1331:4:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "1258:63:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1258:78:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "1250:4:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1120:9:10",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1132:6:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "1143:4:10",
                        "type": ""
                      }
                    ],
                    "src": "1030:313:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1389:35:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1399:19:10",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1415:2:10",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "1409:5:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1409:9:10"
                          },
                          "variableNames": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1399:6:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "allocate_unbounded",
                    "nodeType": "YulFunctionDefinition",
                    "returnVariables": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "1382:6:10",
                        "type": ""
                      }
                    ],
                    "src": "1349:75:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1519:28:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1536:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1539:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "1529:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1529:12:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1529:12:10"
                        }
                      ]
                    },
                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                    "nodeType": "YulFunctionDefinition",
                    "src": "1430:117:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1642:28:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1659:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1662:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "1652:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1652:12:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1652:12:10"
                        }
                      ]
                    },
                    "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                    "nodeType": "YulFunctionDefinition",
                    "src": "1553:117:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1721:81:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1731:65:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1746:5:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1753:42:10",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1742:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1742:54:10"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "1731:7:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint160",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1703:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "1713:7:10",
                        "type": ""
                      }
                    ],
                    "src": "1676:126:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1853:51:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1863:35:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1892:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "1874:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1874:24:10"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "1863:7:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1835:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "1845:7:10",
                        "type": ""
                      }
                    ],
                    "src": "1808:96:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1953:79:10",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2010:16:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2019:1:10",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2022:1:10",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2012:6:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2012:12:10"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2012:12:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1976:5:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2001:5:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1983:17:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1983:24:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "1973:2:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1973:35:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1966:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1966:43:10"
                          },
                          "nodeType": "YulIf",
                          "src": "1963:63:10"
                        }
                      ]
                    },
                    "name": "validator_revert_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1946:5:10",
                        "type": ""
                      }
                    ],
                    "src": "1910:122:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2090:87:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2100:29:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2122:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2109:12:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2109:20:10"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "2100:5:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2165:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2138:26:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2138:33:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2138:33:10"
                        }
                      ]
                    },
                    "name": "abi_decode_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "2068:6:10",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "2076:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "2084:5:10",
                        "type": ""
                      }
                    ],
                    "src": "2038:139:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2228:32:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2238:16:10",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2249:5:10"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "2238:7:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "2210:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "2220:7:10",
                        "type": ""
                      }
                    ],
                    "src": "2183:77:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2309:79:10",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2366:16:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2375:1:10",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2378:1:10",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2368:6:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2368:12:10"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2368:12:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2332:5:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2357:5:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "2339:17:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2339:24:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "2329:2:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2329:35:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2322:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2322:43:10"
                          },
                          "nodeType": "YulIf",
                          "src": "2319:63:10"
                        }
                      ]
                    },
                    "name": "validator_revert_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "2302:5:10",
                        "type": ""
                      }
                    ],
                    "src": "2266:122:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2446:87:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2456:29:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2478:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2465:12:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2465:20:10"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "2456:5:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2521:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2494:26:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2494:33:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2494:33:10"
                        }
                      ]
                    },
                    "name": "abi_decode_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "2424:6:10",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "2432:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "2440:5:10",
                        "type": ""
                      }
                    ],
                    "src": "2394:139:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2622:391:10",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2668:83:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "2670:77:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2670:79:10"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2670:79:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2643:7:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2652:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2639:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2639:23:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2664:2:10",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2635:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2635:32:10"
                          },
                          "nodeType": "YulIf",
                          "src": "2632:119:10"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "2761:117:10",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2776:15:10",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2790:1:10",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "2780:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2805:63:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2840:9:10"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2851:6:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2836:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2836:22:10"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2860:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2815:20:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2815:53:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2805:6:10"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "2888:118:10",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2903:16:10",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2917:2:10",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "2907:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2933:63:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2968:9:10"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2979:6:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2964:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2964:22:10"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2988:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "2943:20:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2943:53:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2933:6:10"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2584:9:10",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "2595:7:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2607:6:10",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "2615:6:10",
                        "type": ""
                      }
                    ],
                    "src": "2539:474:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3061:48:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3071:32:10",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3096:5:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3089:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3089:13:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3082:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3082:21:10"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "3071:7:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_bool",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "3043:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "3053:7:10",
                        "type": ""
                      }
                    ],
                    "src": "3019:90:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3174:50:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3191:3:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3211:5:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "3196:14:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3196:21:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "3184:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3184:34:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3184:34:10"
                        }
                      ]
                    },
                    "name": "abi_encode_t_bool_to_t_bool_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "3162:5:10",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "3169:3:10",
                        "type": ""
                      }
                    ],
                    "src": "3115:109:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3322:118:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3332:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3344:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3355:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3340:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3340:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "3332:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3406:6:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3419:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3430:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3415:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3415:17:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_bool_to_t_bool_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "3368:37:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3368:65:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3368:65:10"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3294:9:10",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3306:6:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "3317:4:10",
                        "type": ""
                      }
                    ],
                    "src": "3230:210:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3511:53:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3528:3:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3551:5:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "3533:17:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3533:24:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "3521:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3521:37:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3521:37:10"
                        }
                      ]
                    },
                    "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "3499:5:10",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "3506:3:10",
                        "type": ""
                      }
                    ],
                    "src": "3446:118:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3668:124:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3678:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3690:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3701:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3686:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3686:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "3678:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3758:6:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3771:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3782:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3767:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3767:17:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "3714:43:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3714:71:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3714:71:10"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3640:9:10",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3652:6:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "3663:4:10",
                        "type": ""
                      }
                    ],
                    "src": "3570:222:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3898:519:10",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3944:83:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "3946:77:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3946:79:10"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3946:79:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3919:7:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3928:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3915:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3915:23:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3940:2:10",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "3911:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3911:32:10"
                          },
                          "nodeType": "YulIf",
                          "src": "3908:119:10"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "4037:117:10",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4052:15:10",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4066:1:10",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "4056:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4081:63:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4116:9:10"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4127:6:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4112:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4112:22:10"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4136:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "4091:20:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4091:53:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4081:6:10"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "4164:118:10",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4179:16:10",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4193:2:10",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "4183:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4209:63:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4244:9:10"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4255:6:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4240:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4240:22:10"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4264:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "4219:20:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4219:53:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4209:6:10"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "4292:118:10",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4307:16:10",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4321:2:10",
                                "type": "",
                                "value": "64"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "4311:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4337:63:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4372:9:10"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4383:6:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4368:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4368:22:10"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4392:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "4347:20:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4347:53:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4337:6:10"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3852:9:10",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "3863:7:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3875:6:10",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "3883:6:10",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "3891:6:10",
                        "type": ""
                      }
                    ],
                    "src": "3798:619:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4466:43:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "4476:27:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4491:5:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4498:4:10",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4487:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4487:16:10"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "4476:7:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint8",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "4448:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "4458:7:10",
                        "type": ""
                      }
                    ],
                    "src": "4423:86:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4576:51:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4593:3:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4614:5:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4598:15:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4598:22:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "4586:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4586:35:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4586:35:10"
                        }
                      ]
                    },
                    "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "4564:5:10",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "4571:3:10",
                        "type": ""
                      }
                    ],
                    "src": "4515:112:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4727:120:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "4737:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4749:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4760:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4745:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4745:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "4737:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4813:6:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4826:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4837:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4822:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4822:17:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "4773:39:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4773:67:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4773:67:10"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "4699:9:10",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "4711:6:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "4722:4:10",
                        "type": ""
                      }
                    ],
                    "src": "4633:214:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4919:263:10",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4965:83:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "4967:77:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4967:79:10"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4967:79:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4940:7:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4949:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4936:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4936:23:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4961:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "4932:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4932:32:10"
                          },
                          "nodeType": "YulIf",
                          "src": "4929:119:10"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "5058:117:10",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5073:15:10",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5087:1:10",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "5077:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5102:63:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5137:9:10"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "5148:6:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5133:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5133:22:10"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5157:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "5112:20:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5112:53:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "5102:6:10"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "4889:9:10",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "4900:7:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "4912:6:10",
                        "type": ""
                      }
                    ],
                    "src": "4853:329:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5271:391:10",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5317:83:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "5319:77:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5319:79:10"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5319:79:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5292:7:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5301:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5288:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5288:23:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5313:2:10",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "5284:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5284:32:10"
                          },
                          "nodeType": "YulIf",
                          "src": "5281:119:10"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "5410:117:10",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5425:15:10",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5439:1:10",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "5429:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5454:63:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5489:9:10"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "5500:6:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5485:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5485:22:10"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5509:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "5464:20:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5464:53:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "5454:6:10"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "5537:118:10",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5552:16:10",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5566:2:10",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "5556:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5582:63:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5617:9:10"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "5628:6:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5613:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5613:22:10"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5637:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "5592:20:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5592:53:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5582:6:10"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "5233:9:10",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "5244:7:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "5256:6:10",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "5264:6:10",
                        "type": ""
                      }
                    ],
                    "src": "5188:474:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5696:152:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5713:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5716:77:10",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5706:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5706:88:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5706:88:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5810:1:10",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5813:4:10",
                                "type": "",
                                "value": "0x22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5803:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5803:15:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5803:15:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5834:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5837:4:10",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "5827:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5827:15:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5827:15:10"
                        }
                      ]
                    },
                    "name": "panic_error_0x22",
                    "nodeType": "YulFunctionDefinition",
                    "src": "5668:180:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5905:269:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "5915:22:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "5929:4:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5935:1:10",
                                "type": "",
                                "value": "2"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "5925:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5925:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5915:6:10"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "5946:38:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "5976:4:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5982:1:10",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5972:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5972:12:10"
                          },
                          "variables": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nodeType": "YulTypedName",
                              "src": "5950:18:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6023:51:10",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "6037:27:10",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "6051:6:10"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6059:4:10",
                                      "type": "",
                                      "value": "0x7f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "6047:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6047:17:10"
                                },
                                "variableNames": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6037:6:10"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "6003:18:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5996:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5996:26:10"
                          },
                          "nodeType": "YulIf",
                          "src": "5993:81:10"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6126:42:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x22",
                                    "nodeType": "YulIdentifier",
                                    "src": "6140:16:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6140:18:10"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6140:18:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "6090:18:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6113:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6121:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6110:2:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6110:14:10"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "6087:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6087:38:10"
                          },
                          "nodeType": "YulIf",
                          "src": "6084:84:10"
                        }
                      ]
                    },
                    "name": "extract_byte_array_length",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nodeType": "YulTypedName",
                        "src": "5889:4:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "5898:6:10",
                        "type": ""
                      }
                    ],
                    "src": "5854:320:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6208:152:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6225:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6228:77:10",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6218:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6218:88:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6218:88:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6322:1:10",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6325:4:10",
                                "type": "",
                                "value": "0x11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6315:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6315:15:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6315:15:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6346:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6349:4:10",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "6339:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6339:15:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6339:15:10"
                        }
                      ]
                    },
                    "name": "panic_error_0x11",
                    "nodeType": "YulFunctionDefinition",
                    "src": "6180:180:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6410:147:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "6420:25:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6443:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "6425:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6425:20:10"
                          },
                          "variableNames": [
                            {
                              "name": "x",
                              "nodeType": "YulIdentifier",
                              "src": "6420:1:10"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6454:25:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "6477:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "6459:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6459:20:10"
                          },
                          "variableNames": [
                            {
                              "name": "y",
                              "nodeType": "YulIdentifier",
                              "src": "6454:1:10"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6488:16:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6499:1:10"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "6502:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6495:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6495:9:10"
                          },
                          "variableNames": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "6488:3:10"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6528:22:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6530:16:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6530:18:10"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6530:18:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6520:1:10"
                              },
                              {
                                "name": "sum",
                                "nodeType": "YulIdentifier",
                                "src": "6523:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "6517:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6517:10:10"
                          },
                          "nodeType": "YulIf",
                          "src": "6514:36:10"
                        }
                      ]
                    },
                    "name": "checked_add_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "6397:1:10",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "6400:1:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "sum",
                        "nodeType": "YulTypedName",
                        "src": "6406:3:10",
                        "type": ""
                      }
                    ],
                    "src": "6366:191:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6669:65:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "6691:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6699:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6687:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6687:14:10"
                              },
                              {
                                "hexValue": "61646472657373206e6f7420746865206f776e6572",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "6703:23:10",
                                "type": "",
                                "value": "address not the owner"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6680:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6680:47:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6680:47:10"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_0118c645f8a1518ac56d8bfae5a844b2a842eecb5e0f52f98bcb2323f92c00c5",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "6661:6:10",
                        "type": ""
                      }
                    ],
                    "src": "6563:171:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6886:220:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "6896:74:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6962:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6967:2:10",
                                "type": "",
                                "value": "21"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "6903:58:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6903:67:10"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6896:3:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7068:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_0118c645f8a1518ac56d8bfae5a844b2a842eecb5e0f52f98bcb2323f92c00c5",
                              "nodeType": "YulIdentifier",
                              "src": "6979:88:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6979:93:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6979:93:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7081:19:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7092:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7097:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7088:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7088:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "7081:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_0118c645f8a1518ac56d8bfae5a844b2a842eecb5e0f52f98bcb2323f92c00c5_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "6874:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "6882:3:10",
                        "type": ""
                      }
                    ],
                    "src": "6740:366:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7283:248:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "7293:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7305:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7316:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7301:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7301:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "7293:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7340:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7351:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7336:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7336:17:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "7359:4:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7365:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "7355:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7355:20:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7329:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7329:47:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7329:47:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7385:139:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "7519:4:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_0118c645f8a1518ac56d8bfae5a844b2a842eecb5e0f52f98bcb2323f92c00c5_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "7393:124:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7393:131:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "7385:4:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_0118c645f8a1518ac56d8bfae5a844b2a842eecb5e0f52f98bcb2323f92c00c5__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "7263:9:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "7278:4:10",
                        "type": ""
                      }
                    ],
                    "src": "7112:419:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7643:115:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "7665:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7673:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7661:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7661:14:10"
                              },
                              {
                                "hexValue": "43616e206f6e6c792062652063616c6c65642066726f6d207468652062726964",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "7677:34:10",
                                "type": "",
                                "value": "Can only be called from the brid"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7654:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7654:58:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7654:58:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "7733:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7741:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7729:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7729:15:10"
                              },
                              {
                                "hexValue": "6765",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "7746:4:10",
                                "type": "",
                                "value": "ge"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7722:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7722:29:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7722:29:10"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_8a233b79c0c4bed7e2dcc770998a6d9a6084c5b7b7ae44e120fb2c7790bd0180",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "7635:6:10",
                        "type": ""
                      }
                    ],
                    "src": "7537:221:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7910:220:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "7920:74:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7986:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7991:2:10",
                                "type": "",
                                "value": "34"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "7927:58:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7927:67:10"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "7920:3:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8092:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_8a233b79c0c4bed7e2dcc770998a6d9a6084c5b7b7ae44e120fb2c7790bd0180",
                              "nodeType": "YulIdentifier",
                              "src": "8003:88:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8003:93:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8003:93:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "8105:19:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8116:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8121:2:10",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8112:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8112:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "8105:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_8a233b79c0c4bed7e2dcc770998a6d9a6084c5b7b7ae44e120fb2c7790bd0180_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "7898:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "7906:3:10",
                        "type": ""
                      }
                    ],
                    "src": "7764:366:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8307:248:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "8317:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8329:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8340:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8325:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8325:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "8317:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8364:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8375:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8360:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8360:17:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "8383:4:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8389:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "8379:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8379:20:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8353:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8353:47:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8353:47:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "8409:139:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "8543:4:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_8a233b79c0c4bed7e2dcc770998a6d9a6084c5b7b7ae44e120fb2c7790bd0180_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "8417:124:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8417:131:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "8409:4:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_8a233b79c0c4bed7e2dcc770998a6d9a6084c5b7b7ae44e120fb2c7790bd0180__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "8287:9:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "8302:4:10",
                        "type": ""
                      }
                    ],
                    "src": "8136:419:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8667:118:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8689:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8697:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8685:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8685:14:10"
                              },
                              {
                                "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "8701:34:10",
                                "type": "",
                                "value": "ERC20: decreased allowance below"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8678:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8678:58:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8678:58:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8757:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8765:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8753:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8753:15:10"
                              },
                              {
                                "hexValue": "207a65726f",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "8770:7:10",
                                "type": "",
                                "value": " zero"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8746:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8746:32:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8746:32:10"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "8659:6:10",
                        "type": ""
                      }
                    ],
                    "src": "8561:224:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8937:220:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "8947:74:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9013:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9018:2:10",
                                "type": "",
                                "value": "37"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "8954:58:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8954:67:10"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "8947:3:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9119:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                              "nodeType": "YulIdentifier",
                              "src": "9030:88:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9030:93:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9030:93:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9132:19:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9143:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9148:2:10",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9139:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9139:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "9132:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "8925:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "8933:3:10",
                        "type": ""
                      }
                    ],
                    "src": "8791:366:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9334:248:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "9344:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9356:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9367:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9352:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9352:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9344:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9391:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9402:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9387:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9387:17:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "9410:4:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9416:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "9406:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9406:20:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9380:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9380:47:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9380:47:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9436:139:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "9570:4:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "9444:124:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9444:131:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9436:4:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "9314:9:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "9329:4:10",
                        "type": ""
                      }
                    ],
                    "src": "9163:419:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9694:117:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "9716:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9724:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9712:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9712:14:10"
                              },
                              {
                                "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "9728:34:10",
                                "type": "",
                                "value": "ERC20: approve from the zero add"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9705:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9705:58:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9705:58:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "9784:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9792:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9780:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9780:15:10"
                              },
                              {
                                "hexValue": "72657373",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "9797:6:10",
                                "type": "",
                                "value": "ress"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9773:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9773:31:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9773:31:10"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "9686:6:10",
                        "type": ""
                      }
                    ],
                    "src": "9588:223:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9963:220:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "9973:74:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10039:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10044:2:10",
                                "type": "",
                                "value": "36"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "9980:58:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9980:67:10"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "9973:3:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10145:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                              "nodeType": "YulIdentifier",
                              "src": "10056:88:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10056:93:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10056:93:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10158:19:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10169:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10174:2:10",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10165:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10165:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "10158:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "9951:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "9959:3:10",
                        "type": ""
                      }
                    ],
                    "src": "9817:366:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10360:248:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "10370:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10382:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10393:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10378:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10378:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "10370:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10417:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10428:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10413:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10413:17:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "10436:4:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10442:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "10432:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10432:20:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10406:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10406:47:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10406:47:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10462:139:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "10596:4:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "10470:124:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10470:131:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "10462:4:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "10340:9:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "10355:4:10",
                        "type": ""
                      }
                    ],
                    "src": "10189:419:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10720:115:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "10742:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10750:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10738:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10738:14:10"
                              },
                              {
                                "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "10754:34:10",
                                "type": "",
                                "value": "ERC20: approve to the zero addre"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10731:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10731:58:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10731:58:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "10810:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10818:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10806:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10806:15:10"
                              },
                              {
                                "hexValue": "7373",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "10823:4:10",
                                "type": "",
                                "value": "ss"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10799:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10799:29:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10799:29:10"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "10712:6:10",
                        "type": ""
                      }
                    ],
                    "src": "10614:221:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10987:220:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "10997:74:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11063:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11068:2:10",
                                "type": "",
                                "value": "34"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "11004:58:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11004:67:10"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "10997:3:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11169:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                              "nodeType": "YulIdentifier",
                              "src": "11080:88:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11080:93:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11080:93:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "11182:19:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11193:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11198:2:10",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11189:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11189:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "11182:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "10975:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "10983:3:10",
                        "type": ""
                      }
                    ],
                    "src": "10841:366:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11384:248:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "11394:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11406:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11417:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11402:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11402:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "11394:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11441:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11452:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11437:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11437:17:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "11460:4:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11466:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "11456:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11456:20:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11430:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11430:47:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11430:47:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "11486:139:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "11620:4:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "11494:124:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11494:131:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "11486:4:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "11364:9:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "11379:4:10",
                        "type": ""
                      }
                    ],
                    "src": "11213:419:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11744:73:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "11766:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11774:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11762:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11762:14:10"
                              },
                              {
                                "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "11778:31:10",
                                "type": "",
                                "value": "ERC20: insufficient allowance"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11755:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11755:55:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11755:55:10"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "11736:6:10",
                        "type": ""
                      }
                    ],
                    "src": "11638:179:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11969:220:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "11979:74:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12045:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12050:2:10",
                                "type": "",
                                "value": "29"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "11986:58:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11986:67:10"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "11979:3:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12151:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                              "nodeType": "YulIdentifier",
                              "src": "12062:88:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12062:93:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12062:93:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12164:19:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12175:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12180:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12171:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12171:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "12164:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "11957:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "11965:3:10",
                        "type": ""
                      }
                    ],
                    "src": "11823:366:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12366:248:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "12376:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12388:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12399:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12384:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12384:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "12376:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12423:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12434:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12419:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12419:17:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "12442:4:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12448:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "12438:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12438:20:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12412:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12412:47:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12412:47:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12468:139:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "12602:4:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "12476:124:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12476:131:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "12468:4:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "12346:9:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "12361:4:10",
                        "type": ""
                      }
                    ],
                    "src": "12195:419:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12726:118:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12748:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12756:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12744:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12744:14:10"
                              },
                              {
                                "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "12760:34:10",
                                "type": "",
                                "value": "ERC20: transfer from the zero ad"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12737:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12737:58:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12737:58:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12816:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12824:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12812:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12812:15:10"
                              },
                              {
                                "hexValue": "6472657373",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "12829:7:10",
                                "type": "",
                                "value": "dress"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12805:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12805:32:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12805:32:10"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "12718:6:10",
                        "type": ""
                      }
                    ],
                    "src": "12620:224:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12996:220:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "13006:74:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13072:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13077:2:10",
                                "type": "",
                                "value": "37"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "13013:58:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13013:67:10"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "13006:3:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13178:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                              "nodeType": "YulIdentifier",
                              "src": "13089:88:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13089:93:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13089:93:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "13191:19:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13202:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13207:2:10",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13198:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13198:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "13191:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "12984:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "12992:3:10",
                        "type": ""
                      }
                    ],
                    "src": "12850:366:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13393:248:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "13403:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13415:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13426:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13411:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13411:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "13403:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13450:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13461:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13446:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13446:17:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "13469:4:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13475:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "13465:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13465:20:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13439:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13439:47:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13439:47:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "13495:139:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "13629:4:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "13503:124:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13503:131:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "13495:4:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "13373:9:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "13388:4:10",
                        "type": ""
                      }
                    ],
                    "src": "13222:419:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13753:116:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "13775:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13783:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13771:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13771:14:10"
                              },
                              {
                                "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "13787:34:10",
                                "type": "",
                                "value": "ERC20: transfer to the zero addr"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13764:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13764:58:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13764:58:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "13843:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13851:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13839:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13839:15:10"
                              },
                              {
                                "hexValue": "657373",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "13856:5:10",
                                "type": "",
                                "value": "ess"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13832:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13832:30:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13832:30:10"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "13745:6:10",
                        "type": ""
                      }
                    ],
                    "src": "13647:222:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14021:220:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "14031:74:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14097:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14102:2:10",
                                "type": "",
                                "value": "35"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "14038:58:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14038:67:10"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "14031:3:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14203:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                              "nodeType": "YulIdentifier",
                              "src": "14114:88:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14114:93:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14114:93:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "14216:19:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14227:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14232:2:10",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14223:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14223:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "14216:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "14009:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "14017:3:10",
                        "type": ""
                      }
                    ],
                    "src": "13875:366:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14418:248:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "14428:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14440:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14451:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14436:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14436:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "14428:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14475:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14486:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14471:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14471:17:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "14494:4:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14500:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "14490:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14490:20:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14464:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14464:47:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14464:47:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "14520:139:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "14654:4:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "14528:124:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14528:131:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "14520:4:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "14398:9:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "14413:4:10",
                        "type": ""
                      }
                    ],
                    "src": "14247:419:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14778:119:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "14800:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14808:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14796:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14796:14:10"
                              },
                              {
                                "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "14812:34:10",
                                "type": "",
                                "value": "ERC20: transfer amount exceeds b"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14789:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14789:58:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14789:58:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "14868:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14876:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14864:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14864:15:10"
                              },
                              {
                                "hexValue": "616c616e6365",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "14881:8:10",
                                "type": "",
                                "value": "alance"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14857:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14857:33:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14857:33:10"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "14770:6:10",
                        "type": ""
                      }
                    ],
                    "src": "14672:225:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15049:220:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "15059:74:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15125:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15130:2:10",
                                "type": "",
                                "value": "38"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "15066:58:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15066:67:10"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "15059:3:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15231:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                              "nodeType": "YulIdentifier",
                              "src": "15142:88:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15142:93:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15142:93:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "15244:19:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15255:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15260:2:10",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15251:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15251:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "15244:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "15037:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "15045:3:10",
                        "type": ""
                      }
                    ],
                    "src": "14903:366:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15446:248:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "15456:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15468:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15479:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15464:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15464:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "15456:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15503:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15514:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15499:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15499:17:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "15522:4:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15528:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "15518:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15518:20:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15492:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15492:47:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15492:47:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "15548:139:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "15682:4:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "15556:124:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15556:131:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "15548:4:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "15426:9:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "15441:4:10",
                        "type": ""
                      }
                    ],
                    "src": "15275:419:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15806:114:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15828:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15836:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15824:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15824:14:10"
                              },
                              {
                                "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "15840:34:10",
                                "type": "",
                                "value": "ERC20: burn from the zero addres"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15817:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15817:58:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15817:58:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15896:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15904:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15892:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15892:15:10"
                              },
                              {
                                "hexValue": "73",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "15909:3:10",
                                "type": "",
                                "value": "s"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15885:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15885:28:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15885:28:10"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "15798:6:10",
                        "type": ""
                      }
                    ],
                    "src": "15700:220:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16072:220:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "16082:74:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16148:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16153:2:10",
                                "type": "",
                                "value": "33"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "16089:58:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16089:67:10"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "16082:3:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16254:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                              "nodeType": "YulIdentifier",
                              "src": "16165:88:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16165:93:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16165:93:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "16267:19:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16278:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16283:2:10",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16274:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16274:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "16267:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "16060:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "16068:3:10",
                        "type": ""
                      }
                    ],
                    "src": "15926:366:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16469:248:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "16479:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16491:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16502:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16487:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16487:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "16479:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16526:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16537:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16522:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16522:17:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "16545:4:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16551:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "16541:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16541:20:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16515:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16515:47:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16515:47:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "16571:139:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "16705:4:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "16579:124:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16579:131:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "16571:4:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "16449:9:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "16464:4:10",
                        "type": ""
                      }
                    ],
                    "src": "16298:419:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16829:115:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "16851:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16859:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16847:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16847:14:10"
                              },
                              {
                                "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "16863:34:10",
                                "type": "",
                                "value": "ERC20: burn amount exceeds balan"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16840:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16840:58:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16840:58:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "16919:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16927:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16915:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16915:15:10"
                              },
                              {
                                "hexValue": "6365",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "16932:4:10",
                                "type": "",
                                "value": "ce"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16908:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16908:29:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16908:29:10"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "16821:6:10",
                        "type": ""
                      }
                    ],
                    "src": "16723:221:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17096:220:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "17106:74:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "17172:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17177:2:10",
                                "type": "",
                                "value": "34"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "17113:58:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17113:67:10"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "17106:3:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "17278:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                              "nodeType": "YulIdentifier",
                              "src": "17189:88:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17189:93:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17189:93:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "17291:19:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "17302:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17307:2:10",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17298:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17298:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "17291:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "17084:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "17092:3:10",
                        "type": ""
                      }
                    ],
                    "src": "16950:366:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17493:248:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "17503:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17515:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17526:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17511:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17511:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "17503:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17550:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17561:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17546:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17546:17:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "17569:4:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17575:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "17565:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17565:20:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "17539:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17539:47:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17539:47:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "17595:139:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "17729:4:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "17603:124:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17603:131:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "17595:4:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "17473:9:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "17488:4:10",
                        "type": ""
                      }
                    ],
                    "src": "17322:419:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17853:75:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "17875:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17883:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17871:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17871:14:10"
                              },
                              {
                                "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "17887:33:10",
                                "type": "",
                                "value": "ERC20: mint to the zero address"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "17864:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17864:57:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17864:57:10"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "17845:6:10",
                        "type": ""
                      }
                    ],
                    "src": "17747:181:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "18080:220:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "18090:74:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "18156:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18161:2:10",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "18097:58:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18097:67:10"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "18090:3:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "18262:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                              "nodeType": "YulIdentifier",
                              "src": "18173:88:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18173:93:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18173:93:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "18275:19:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "18286:3:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18291:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18282:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18282:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "18275:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "18068:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "18076:3:10",
                        "type": ""
                      }
                    ],
                    "src": "17934:366:10"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "18477:248:10",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "18487:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18499:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18510:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18495:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18495:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "18487:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18534:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18545:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18530:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18530:17:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "18553:4:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18559:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "18549:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18549:20:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18523:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18523:47:10"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18523:47:10"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "18579:139:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "18713:4:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "18587:124:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18587:131:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "18579:4:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "18457:9:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "18472:4:10",
                        "type": ""
                      }
                    ],
                    "src": "18306:419:10"
                  }
                ]
              },
              "contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0118c645f8a1518ac56d8bfae5a844b2a842eecb5e0f52f98bcb2323f92c00c5(memPtr) {\n\n        mstore(add(memPtr, 0), \"address not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0118c645f8a1518ac56d8bfae5a844b2a842eecb5e0f52f98bcb2323f92c00c5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_0118c645f8a1518ac56d8bfae5a844b2a842eecb5e0f52f98bcb2323f92c00c5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0118c645f8a1518ac56d8bfae5a844b2a842eecb5e0f52f98bcb2323f92c00c5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0118c645f8a1518ac56d8bfae5a844b2a842eecb5e0f52f98bcb2323f92c00c5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8a233b79c0c4bed7e2dcc770998a6d9a6084c5b7b7ae44e120fb2c7790bd0180(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can only be called from the brid\")\n\n        mstore(add(memPtr, 32), \"ge\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a233b79c0c4bed7e2dcc770998a6d9a6084c5b7b7ae44e120fb2c7790bd0180_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_8a233b79c0c4bed7e2dcc770998a6d9a6084c5b7b7ae44e120fb2c7790bd0180(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a233b79c0c4bed7e2dcc770998a6d9a6084c5b7b7ae44e120fb2c7790bd0180__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a233b79c0c4bed7e2dcc770998a6d9a6084c5b7b7ae44e120fb2c7790bd0180_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
              "id": 10,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "immutableReferences": {
            "2551": [
              {
                "length": 32,
                "start": 1083
              }
            ]
          },
          "linkReferences": {},
          "object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b411461025d578063a457c2d71461027b578063a9059cbb146102ab578063dd62ed3e146102db576100ea565b806370a08231146101f557806374f4f547146102255780638c2a993e14610241576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806345494e3e146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761030b565b60405161010491906110ee565b60405180910390f35b610127600480360381019061012291906111a9565b61039d565b6040516101349190611204565b60405180910390f35b6101456103c0565b604051610152919061122e565b60405180910390f35b61017560048036038101906101709190611249565b6103ca565b6040516101829190611204565b60405180910390f35b6101936103f9565b6040516101a091906112b8565b60405180910390f35b6101c360048036038101906101be91906111a9565b610402565b6040516101d09190611204565b60405180910390f35b6101f360048036038101906101ee91906112d3565b610439565b005b61020f600480360381019061020a91906112d3565b61050b565b60405161021c919061122e565b60405180910390f35b61023f600480360381019061023a91906111a9565b610553565b005b61025b600480360381019061025691906111a9565b6105f1565b005b61026561068f565b60405161027291906110ee565b60405180910390f35b610295600480360381019061029091906111a9565b610721565b6040516102a29190611204565b60405180910390f35b6102c560048036038101906102c091906111a9565b610798565b6040516102d29190611204565b60405180910390f35b6102f560048036038101906102f09190611300565b6107bb565b604051610302919061122e565b60405180910390f35b60606003805461031a9061136f565b80601f01602080910402602001604051908101604052809291908181526020018280546103469061136f565b80156103935780601f1061036857610100808354040283529160200191610393565b820191906000526020600020905b81548152906001019060200180831161037657829003601f168201915b5050505050905090565b6000806103a8610842565b90506103b581858561084a565b600191505092915050565b6000600254905090565b6000806103d5610842565b90506103e2858285610a13565b6103ed858585610a9f565b60019150509392505050565b60006012905090565b60008061040d610842565b905061042e81858561041f85896107bb565b61042991906113cf565b61084a565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104be9061144f565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105da906114e1565b60405180910390fd5b6105ed8282610d15565b5050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610681576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610678906114e1565b60405180910390fd5b61068b8282610d23565b5050565b60606004805461069e9061136f565b80601f01602080910402602001604051908101604052809291908181526020018280546106ca9061136f565b80156107175780601f106106ec57610100808354040283529160200191610717565b820191906000526020600020905b8154815290600101906020018083116106fa57829003601f168201915b5050505050905090565b60008061072c610842565b9050600061073a82866107bb565b90508381101561077f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077690611573565b60405180910390fd5b61078c828686840361084a565b60019250505092915050565b6000806107a3610842565b90506107b0818585610a9f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b090611605565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610928576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091f90611697565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a06919061122e565b60405180910390a3505050565b6000610a1f84846107bb565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a995781811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290611703565b60405180910390fd5b610a98848484840361084a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0590611795565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7490611827565b60405180910390fd5b610b88838383610d31565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c05906118b9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cfc919061122e565b60405180910390a3610d0f848484610d36565b50505050565b610d1f8282610d3b565b5050565b610d2d8282610f08565b5050565b505050565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610daa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da19061194b565b60405180910390fd5b610db682600083610d31565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e33906119dd565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610eef919061122e565b60405180910390a3610f0383600084610d36565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6e90611a49565b60405180910390fd5b610f8360008383610d31565b8060026000828254610f9591906113cf565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611046919061122e565b60405180910390a361105a60008383610d36565b5050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561109857808201518184015260208101905061107d565b60008484015250505050565b6000601f19601f8301169050919050565b60006110c08261105e565b6110ca8185611069565b93506110da81856020860161107a565b6110e3816110a4565b840191505092915050565b6000602082019050818103600083015261110881846110b5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061114082611115565b9050919050565b61115081611135565b811461115b57600080fd5b50565b60008135905061116d81611147565b92915050565b6000819050919050565b61118681611173565b811461119157600080fd5b50565b6000813590506111a38161117d565b92915050565b600080604083850312156111c0576111bf611110565b5b60006111ce8582860161115e565b92505060206111df85828601611194565b9150509250929050565b60008115159050919050565b6111fe816111e9565b82525050565b600060208201905061121960008301846111f5565b92915050565b61122881611173565b82525050565b6000602082019050611243600083018461121f565b92915050565b60008060006060848603121561126257611261611110565b5b60006112708682870161115e565b93505060206112818682870161115e565b925050604061129286828701611194565b9150509250925092565b600060ff82169050919050565b6112b28161129c565b82525050565b60006020820190506112cd60008301846112a9565b92915050565b6000602082840312156112e9576112e8611110565b5b60006112f78482850161115e565b91505092915050565b6000806040838503121561131757611316611110565b5b60006113258582860161115e565b92505060206113368582860161115e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061138757607f821691505b60208210810361139a57611399611340565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113da82611173565b91506113e583611173565b92508282019050808211156113fd576113fc6113a0565b5b92915050565b7f61646472657373206e6f7420746865206f776e65720000000000000000000000600082015250565b6000611439601583611069565b915061144482611403565b602082019050919050565b600060208201905081810360008301526114688161142c565b9050919050565b7f43616e206f6e6c792062652063616c6c65642066726f6d20746865206272696460008201527f6765000000000000000000000000000000000000000000000000000000000000602082015250565b60006114cb602283611069565b91506114d68261146f565b604082019050919050565b600060208201905081810360008301526114fa816114be565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061155d602583611069565b915061156882611501565b604082019050919050565b6000602082019050818103600083015261158c81611550565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006115ef602483611069565b91506115fa82611593565b604082019050919050565b6000602082019050818103600083015261161e816115e2565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611681602283611069565b915061168c82611625565b604082019050919050565b600060208201905081810360008301526116b081611674565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006116ed601d83611069565b91506116f8826116b7565b602082019050919050565b6000602082019050818103600083015261171c816116e0565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061177f602583611069565b915061178a82611723565b604082019050919050565b600060208201905081810360008301526117ae81611772565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611811602383611069565b915061181c826117b5565b604082019050919050565b6000602082019050818103600083015261184081611804565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006118a3602683611069565b91506118ae82611847565b604082019050919050565b600060208201905081810360008301526118d281611896565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611935602183611069565b9150611940826118d9565b604082019050919050565b6000602082019050818103600083015261196481611928565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006119c7602283611069565b91506119d28261196b565b604082019050919050565b600060208201905081810360008301526119f6816119ba565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611a33601f83611069565b9150611a3e826119fd565b602082019050919050565b60006020820190508181036000830152611a6281611a26565b905091905056fea26469706673582212204a7de346c47dc25b63f2c60df406b21f6ae47dae4c576b240d0f2eb19b5f8d2964736f6c63430008120033",
          "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2DB JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x74F4F547 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x8C2A993E EQ PUSH2 0x241 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x45494E3E EQ PUSH2 0x1D9 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x12D3 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x12D3 JUMP JUMPDEST PUSH2 0x50B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x5F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x265 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1300 JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x31A SWAP1 PUSH2 0x136F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x346 SWAP1 PUSH2 0x136F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x393 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x368 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x393 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x376 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3A8 PUSH2 0x842 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B5 DUP2 DUP6 DUP6 PUSH2 0x84A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3D5 PUSH2 0x842 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E2 DUP6 DUP3 DUP6 PUSH2 0xA13 JUMP JUMPDEST PUSH2 0x3ED DUP6 DUP6 DUP6 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x40D PUSH2 0x842 JUMP JUMPDEST SWAP1 POP PUSH2 0x42E DUP2 DUP6 DUP6 PUSH2 0x41F DUP6 DUP10 PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BE SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DA SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5ED DUP3 DUP3 PUSH2 0xD15 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x681 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x678 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68B DUP3 DUP3 PUSH2 0xD23 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x69E SWAP1 PUSH2 0x136F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6CA SWAP1 PUSH2 0x136F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x717 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x717 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6FA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x72C PUSH2 0x842 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x73A DUP3 DUP7 PUSH2 0x7BB JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x84A JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7A3 PUSH2 0x842 JUMP JUMPDEST SWAP1 POP PUSH2 0x7B0 DUP2 DUP6 DUP6 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP1 PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x928 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91F SWAP1 PUSH2 0x1697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA06 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1F DUP5 DUP5 PUSH2 0x7BB JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA99 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA82 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA98 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x84A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB05 SWAP1 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB74 SWAP1 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB88 DUP4 DUP4 DUP4 PUSH2 0xD31 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC05 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xCFC SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xD0F DUP5 DUP5 DUP5 PUSH2 0xD36 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD1F DUP3 DUP3 PUSH2 0xD3B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD2D DUP3 DUP3 PUSH2 0xF08 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA1 SWAP1 PUSH2 0x194B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB6 DUP3 PUSH1 0x0 DUP4 PUSH2 0xD31 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE33 SWAP1 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xEEF SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xF03 DUP4 PUSH1 0x0 DUP5 PUSH2 0xD36 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6E SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF83 PUSH1 0x0 DUP4 DUP4 PUSH2 0xD31 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF95 SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1046 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x105A PUSH1 0x0 DUP4 DUP4 PUSH2 0xD36 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1098 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x107D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C0 DUP3 PUSH2 0x105E JUMP JUMPDEST PUSH2 0x10CA DUP2 DUP6 PUSH2 0x1069 JUMP JUMPDEST SWAP4 POP PUSH2 0x10DA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x107A JUMP JUMPDEST PUSH2 0x10E3 DUP2 PUSH2 0x10A4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1108 DUP2 DUP5 PUSH2 0x10B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1140 DUP3 PUSH2 0x1115 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1150 DUP2 PUSH2 0x1135 JUMP JUMPDEST DUP2 EQ PUSH2 0x115B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116D DUP2 PUSH2 0x1147 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1186 DUP2 PUSH2 0x1173 JUMP JUMPDEST DUP2 EQ PUSH2 0x1191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11A3 DUP2 PUSH2 0x117D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11C0 JUMPI PUSH2 0x11BF PUSH2 0x1110 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11CE DUP6 DUP3 DUP7 ADD PUSH2 0x115E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11DF DUP6 DUP3 DUP7 ADD PUSH2 0x1194 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11FE DUP2 PUSH2 0x11E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1219 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1228 DUP2 PUSH2 0x1173 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1243 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x121F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1262 JUMPI PUSH2 0x1261 PUSH2 0x1110 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1270 DUP7 DUP3 DUP8 ADD PUSH2 0x115E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1281 DUP7 DUP3 DUP8 ADD PUSH2 0x115E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1292 DUP7 DUP3 DUP8 ADD PUSH2 0x1194 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B2 DUP2 PUSH2 0x129C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12CD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E9 JUMPI PUSH2 0x12E8 PUSH2 0x1110 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12F7 DUP5 DUP3 DUP6 ADD PUSH2 0x115E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1317 JUMPI PUSH2 0x1316 PUSH2 0x1110 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1325 DUP6 DUP3 DUP7 ADD PUSH2 0x115E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1336 DUP6 DUP3 DUP7 ADD PUSH2 0x115E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1387 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x139A JUMPI PUSH2 0x1399 PUSH2 0x1340 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13DA DUP3 PUSH2 0x1173 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E5 DUP4 PUSH2 0x1173 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x13FD JUMPI PUSH2 0x13FC PUSH2 0x13A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x61646472657373206E6F7420746865206F776E65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1439 PUSH1 0x15 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x1444 DUP3 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1468 DUP2 PUSH2 0x142C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E206F6E6C792062652063616C6C65642066726F6D207468652062726964 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6765000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14CB PUSH1 0x22 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x14D6 DUP3 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14FA DUP2 PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155D PUSH1 0x25 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x1568 DUP3 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x158C DUP2 PUSH2 0x1550 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15EF PUSH1 0x24 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x15FA DUP3 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x161E DUP2 PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1681 PUSH1 0x22 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x168C DUP3 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16B0 DUP2 PUSH2 0x1674 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16ED PUSH1 0x1D DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x16F8 DUP3 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x171C DUP2 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x177F PUSH1 0x25 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x178A DUP3 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17AE DUP2 PUSH2 0x1772 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1811 PUSH1 0x23 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x181C DUP3 PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1840 DUP2 PUSH2 0x1804 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A3 PUSH1 0x26 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x18AE DUP3 PUSH2 0x1847 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18D2 DUP2 PUSH2 0x1896 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1935 PUSH1 0x21 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x1940 DUP3 PUSH2 0x18D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1964 DUP2 PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C7 PUSH1 0x22 DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x19D2 DUP3 PUSH2 0x196B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19F6 DUP2 PUSH2 0x19BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A33 PUSH1 0x1F DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3E DUP3 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A62 DUP2 PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A PUSH30 0xE346C47DC25B63F2C60DF406B21F6AE47DAE4C576B240D0F2EB19B5F8D29 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
          "sourceMap": "116:1278:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;725:107:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3419:125:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1255:137:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1087;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2369:102:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;725:107:9:-;512:5;498:19;;:10;:19;;;490:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;817:8:::1;803:11;;:22;;;;;;;;;;;;;;;;;;725:107:::0;:::o;3419:125:0:-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;1255:137:9:-;364:11;;;;;;;;;;;350:25;;:10;:25;;;329:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1363:22:::1;1369:7;1378:6;1363:5;:22::i;:::-;1255:137:::0;;:::o;1087:::-;364:11;;;;;;;;;;;350:25;;:10;:25;;;329:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1195:22:::1;1201:7;1210:6;1195:5;:22::i;:::-;1087:137:::0;;:::o;2369:102:0:-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;3987:149::-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;10457:340:0:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;945:111:9:-;1021:28;1033:7;1042:6;1021:11;:28::i;:::-;945:111;;:::o;838:101::-;909:23;921:2;925:6;909:11;:23::i;:::-;838:101;;:::o;12073:91:0:-;;;;:::o;12752:90::-;;;;:::o;9375:659::-;9477:1;9458:21;;:7;:21;;;9450:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9528:49;9549:7;9566:1;9570:6;9528:20;:49::i;:::-;9588:22;9613:9;:18;9623:7;9613:18;;;;;;;;;;;;;;;;9588:43;;9667:6;9649:14;:24;;9641:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9784:6;9767:14;:23;9746:9;:18;9756:7;9746:18;;;;;;;;;;;;;;;:44;;;;9899:6;9883:12;;:22;;;;;;;;;;;9957:1;9931:37;;9940:7;9931:37;;;9961:6;9931:37;;;;;;:::i;:::-;;;;;;;;9979:48;9999:7;10016:1;10020:6;9979:19;:48::i;:::-;9440:594;9375:659;;:::o;8520:535::-;8622:1;8603:21;;:7;:21;;;8595:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;;;;;8921:6;8899:9;:18;8909:7;8899:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;8973:7;8952:37;;8969:1;8952:37;;;8982:6;8952:37;;;;;;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;:48::i;:::-;8520:535;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:171::-;6703:23;6699:1;6691:6;6687:14;6680:47;6563:171;:::o;6740:366::-;6882:3;6903:67;6967:2;6962:3;6903:67;:::i;:::-;6896:74;;6979:93;7068:3;6979:93;:::i;:::-;7097:2;7092:3;7088:12;7081:19;;6740:366;;;:::o;7112:419::-;7278:4;7316:2;7305:9;7301:18;7293:26;;7365:9;7359:4;7355:20;7351:1;7340:9;7336:17;7329:47;7393:131;7519:4;7393:131;:::i;:::-;7385:139;;7112:419;;;:::o;7537:221::-;7677:34;7673:1;7665:6;7661:14;7654:58;7746:4;7741:2;7733:6;7729:15;7722:29;7537:221;:::o;7764:366::-;7906:3;7927:67;7991:2;7986:3;7927:67;:::i;:::-;7920:74;;8003:93;8092:3;8003:93;:::i;:::-;8121:2;8116:3;8112:12;8105:19;;7764:366;;;:::o;8136:419::-;8302:4;8340:2;8329:9;8325:18;8317:26;;8389:9;8383:4;8379:20;8375:1;8364:9;8360:17;8353:47;8417:131;8543:4;8417:131;:::i;:::-;8409:139;;8136:419;;;:::o;8561:224::-;8701:34;8697:1;8689:6;8685:14;8678:58;8770:7;8765:2;8757:6;8753:15;8746:32;8561:224;:::o;8791:366::-;8933:3;8954:67;9018:2;9013:3;8954:67;:::i;:::-;8947:74;;9030:93;9119:3;9030:93;:::i;:::-;9148:2;9143:3;9139:12;9132:19;;8791:366;;;:::o;9163:419::-;9329:4;9367:2;9356:9;9352:18;9344:26;;9416:9;9410:4;9406:20;9402:1;9391:9;9387:17;9380:47;9444:131;9570:4;9444:131;:::i;:::-;9436:139;;9163:419;;;:::o;9588:223::-;9728:34;9724:1;9716:6;9712:14;9705:58;9797:6;9792:2;9784:6;9780:15;9773:31;9588:223;:::o;9817:366::-;9959:3;9980:67;10044:2;10039:3;9980:67;:::i;:::-;9973:74;;10056:93;10145:3;10056:93;:::i;:::-;10174:2;10169:3;10165:12;10158:19;;9817:366;;;:::o;10189:419::-;10355:4;10393:2;10382:9;10378:18;10370:26;;10442:9;10436:4;10432:20;10428:1;10417:9;10413:17;10406:47;10470:131;10596:4;10470:131;:::i;:::-;10462:139;;10189:419;;;:::o;10614:221::-;10754:34;10750:1;10742:6;10738:14;10731:58;10823:4;10818:2;10810:6;10806:15;10799:29;10614:221;:::o;10841:366::-;10983:3;11004:67;11068:2;11063:3;11004:67;:::i;:::-;10997:74;;11080:93;11169:3;11080:93;:::i;:::-;11198:2;11193:3;11189:12;11182:19;;10841:366;;;:::o;11213:419::-;11379:4;11417:2;11406:9;11402:18;11394:26;;11466:9;11460:4;11456:20;11452:1;11441:9;11437:17;11430:47;11494:131;11620:4;11494:131;:::i;:::-;11486:139;;11213:419;;;:::o;11638:179::-;11778:31;11774:1;11766:6;11762:14;11755:55;11638:179;:::o;11823:366::-;11965:3;11986:67;12050:2;12045:3;11986:67;:::i;:::-;11979:74;;12062:93;12151:3;12062:93;:::i;:::-;12180:2;12175:3;12171:12;12164:19;;11823:366;;;:::o;12195:419::-;12361:4;12399:2;12388:9;12384:18;12376:26;;12448:9;12442:4;12438:20;12434:1;12423:9;12419:17;12412:47;12476:131;12602:4;12476:131;:::i;:::-;12468:139;;12195:419;;;:::o;12620:224::-;12760:34;12756:1;12748:6;12744:14;12737:58;12829:7;12824:2;12816:6;12812:15;12805:32;12620:224;:::o;12850:366::-;12992:3;13013:67;13077:2;13072:3;13013:67;:::i;:::-;13006:74;;13089:93;13178:3;13089:93;:::i;:::-;13207:2;13202:3;13198:12;13191:19;;12850:366;;;:::o;13222:419::-;13388:4;13426:2;13415:9;13411:18;13403:26;;13475:9;13469:4;13465:20;13461:1;13450:9;13446:17;13439:47;13503:131;13629:4;13503:131;:::i;:::-;13495:139;;13222:419;;;:::o;13647:222::-;13787:34;13783:1;13775:6;13771:14;13764:58;13856:5;13851:2;13843:6;13839:15;13832:30;13647:222;:::o;13875:366::-;14017:3;14038:67;14102:2;14097:3;14038:67;:::i;:::-;14031:74;;14114:93;14203:3;14114:93;:::i;:::-;14232:2;14227:3;14223:12;14216:19;;13875:366;;;:::o;14247:419::-;14413:4;14451:2;14440:9;14436:18;14428:26;;14500:9;14494:4;14490:20;14486:1;14475:9;14471:17;14464:47;14528:131;14654:4;14528:131;:::i;:::-;14520:139;;14247:419;;;:::o;14672:225::-;14812:34;14808:1;14800:6;14796:14;14789:58;14881:8;14876:2;14868:6;14864:15;14857:33;14672:225;:::o;14903:366::-;15045:3;15066:67;15130:2;15125:3;15066:67;:::i;:::-;15059:74;;15142:93;15231:3;15142:93;:::i;:::-;15260:2;15255:3;15251:12;15244:19;;14903:366;;;:::o;15275:419::-;15441:4;15479:2;15468:9;15464:18;15456:26;;15528:9;15522:4;15518:20;15514:1;15503:9;15499:17;15492:47;15556:131;15682:4;15556:131;:::i;:::-;15548:139;;15275:419;;;:::o;15700:220::-;15840:34;15836:1;15828:6;15824:14;15817:58;15909:3;15904:2;15896:6;15892:15;15885:28;15700:220;:::o;15926:366::-;16068:3;16089:67;16153:2;16148:3;16089:67;:::i;:::-;16082:74;;16165:93;16254:3;16165:93;:::i;:::-;16283:2;16278:3;16274:12;16267:19;;15926:366;;;:::o;16298:419::-;16464:4;16502:2;16491:9;16487:18;16479:26;;16551:9;16545:4;16541:20;16537:1;16526:9;16522:17;16515:47;16579:131;16705:4;16579:131;:::i;:::-;16571:139;;16298:419;;;:::o;16723:221::-;16863:34;16859:1;16851:6;16847:14;16840:58;16932:4;16927:2;16919:6;16915:15;16908:29;16723:221;:::o;16950:366::-;17092:3;17113:67;17177:2;17172:3;17113:67;:::i;:::-;17106:74;;17189:93;17278:3;17189:93;:::i;:::-;17307:2;17302:3;17298:12;17291:19;;16950:366;;;:::o;17322:419::-;17488:4;17526:2;17515:9;17511:18;17503:26;;17575:9;17569:4;17565:20;17561:1;17550:9;17546:17;17539:47;17603:131;17729:4;17603:131;:::i;:::-;17595:139;;17322:419;;;:::o;17747:181::-;17887:33;17883:1;17875:6;17871:14;17864:57;17747:181;:::o;17934:366::-;18076:3;18097:67;18161:2;18156:3;18097:67;:::i;:::-;18090:74;;18173:93;18262:3;18173:93;:::i;:::-;18291:2;18286:3;18282:12;18275:19;;17934:366;;;:::o;18306:419::-;18472:4;18510:2;18499:9;18495:18;18487:26;;18559:9;18553:4;18549:20;18545:1;18534:9;18530:17;18523:47;18587:131;18713:4;18587:131;:::i;:::-;18579:139;;18306:419;;;:::o"
        },
        "gasEstimates": {
          "creation": {
            "codeDepositCost": "1363000",
            "executionCost": "infinite",
            "totalCost": "infinite"
          },
          "external": {
            "addTokenBridgeAddress(address)": "infinite",
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "2864",
            "bridgeBurn(address,uint256)": "infinite",
            "bridgeMint(address,uint256)": "infinite",
            "decimals()": "388",
            "decreaseAllowance(address,uint256)": "infinite",
            "increaseAllowance(address,uint256)": "infinite",
            "name()": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "2505",
            "transfer(address,uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite"
          },
          "internal": {
            "_burn(address,uint256)": "infinite",
            "_mint(address,uint256)": "infinite"
          }
        },
        "methodIdentifiers": {
          "addTokenBridgeAddress(address)": "45494e3e",
          "allowance(address,address)": "dd62ed3e",
          "approve(address,uint256)": "095ea7b3",
          "balanceOf(address)": "70a08231",
          "bridgeBurn(address,uint256)": "74f4f547",
          "bridgeMint(address,uint256)": "8c2a993e",
          "decimals()": "313ce567",
          "decreaseAllowance(address,uint256)": "a457c2d7",
          "increaseAllowance(address,uint256)": "39509351",
          "name()": "06fdde03",
          "symbol()": "95d89b41",
          "totalSupply()": "18160ddd",
          "transfer(address,uint256)": "a9059cbb",
          "transferFrom(address,address,uint256)": "23b872dd"
        }
      },
      "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addTokenBridgeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bridgeBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bridgeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Token.sol\":\"Token\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Token.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract Token is ERC20 {\\n    constructor() ERC20(\\\"Token\\\", \\\"TOK\\\") {\\n        owner = msg.sender;\\n    }\\n\\n    address private tokenBridge;\\n    address private immutable owner;\\n\\n    modifier isTokenBridge() {\\n        require(\\n            msg.sender == tokenBridge,\\n            \\\"Can only be called from the bridge\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"address not the owner\\\");\\n        _;\\n    }\\n\\n    // ADDS the bridge address for restriction, if we need to we can change the contract, if we develop any upgrades, the old one will aswell lose the access\\n    function addTokenBridgeAddress(address _address) external onlyOwner {\\n        tokenBridge = _address;\\n    }\\n\\n    function _mint(address to, uint256 amount) internal override {\\n        super._mint(to, amount);\\n    }\\n\\n    function _burn(address account, uint256 amount) internal override {\\n        super._burn(account, amount);\\n    }\\n\\n    //MINT in the bridge\\n    function bridgeMint(\\n        address account,\\n        uint256 amount\\n    ) external isTokenBridge {\\n        _mint(account, amount);\\n    }\\n\\n    //BURN in the bridge\\n    function bridgeBurn(\\n        address account,\\n        uint256 amount\\n    ) external isTokenBridge {\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x6b6bc450e6bb54eebba4d1b494c7ab7f9cb5426f4a2c34dfeba99d10f7c28ab4\",\"license\":\"MIT\"}},\"version\":1}",
      "storageLayout": {
        "storage": [
          {
            "astId": 15,
            "contract": "contracts/Token.sol:Token",
            "label": "_balances",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 21,
            "contract": "contracts/Token.sol:Token",
            "label": "_allowances",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
          },
          {
            "astId": 23,
            "contract": "contracts/Token.sol:Token",
            "label": "_totalSupply",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 25,
            "contract": "contracts/Token.sol:Token",
            "label": "_name",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 27,
            "contract": "contracts/Token.sol:Token",
            "label": "_symbol",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 2549,
            "contract": "contracts/Token.sol:Token",
            "label": "tokenBridge",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_string_storage": {
            "encoding": "bytes",
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "solcInput": "{\n  \"language\": \"Solidity\",\n  \"sources\": {\n    \"@openzeppelin/contracts/token/ERC20/ERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/IERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Context.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Strings.sol\\\";\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS,\\n        InvalidSignatureV // Deprecated in v4.8\\n    }\\n\\n    function _throwError(RecoverError error) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert(\\\"ECDSA: invalid signature\\\");\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature` or error string. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\\n        return tryRecover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     *\\n     * _Available since v4.2._\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature);\\n        }\\n\\n        return (signer, RecoverError.NoError);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0x00, \\\"\\\\x19Ethereum Signed Message:\\\\n32\\\")\\n            mstore(0x1c, hash)\\n            message := keccak256(0x00, 0x3c)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\", Strings.toString(s.length), s));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Typed Data, created from a\\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\\n     * to the one signed with the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\\n     * JSON-RPC method as part of EIP-712.\\n     *\\n     * See {recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, \\\"\\\\x19\\\\x01\\\")\\n            mstore(add(ptr, 0x02), domainSeparator)\\n            mstore(add(ptr, 0x22), structHash)\\n            data := keccak256(ptr, 0x42)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\\n     * `validator` and `data` according to the version 0 of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x00\\\", validator, data));\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/math/Math.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/math/SignedMath.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Strings.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\"\n    },\n    \"contracts/Bridge.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\n// import \\\"@openzeppelin/contracts/interfaces/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\\\";\\n\\ninterface IERC20 {\\n    function bridgeBurn(address account, uint256 amount) external;\\n\\n    function bridgeMint(address account, uint256 amount) external;\\n}\\n\\ncontract TokenBridge {\\n    IERC20 public immutable token;\\n    using ECDSA for bytes32;\\n\\n    enum transferType {\\n        SEND,\\n        RECEIVE\\n    }\\n\\n    event Transfer(\\n        address indexed _address,\\n        uint256 _amount,\\n        uint256 _nonce,\\n        bytes signature,\\n        transferType _type\\n    );\\n\\n    constructor(address _token) {\\n        token = IERC20(_token);\\n    }\\n\\n    // To see if it was completed and to check which nonce is current one in address mapping\\n    mapping(address => uint256) public currentNonce;\\n    mapping(address => mapping(uint256 => bool)) public nonceInProgress;\\n\\n    function sendTokens(\\n        address _address,\\n        uint256 _amount,\\n        bytes calldata signature\\n    ) external {\\n        require(\\n            nonceInProgress[_address][getCurrentNonce(_address)] == false,\\n            \\\"Transaction hasn't been completed yet\\\"\\n        ); //If the last nonce was in progress, the user can't send additional cryptocurrency.\\n        bytes32 hashedMessage = messageHash(_address, _amount);\\n        require(\\n            verifySignature(_address, hashedMessage, signature),\\n            \\\"This transaction was not verified\\\"\\n        ); // To check if the sender has signed the hash\\n        token.bridgeBurn(msg.sender, _amount); // NEED TO ADD CUSTOM INTERFACE\\n        nonceInProgress[_address][getCurrentNonce(_address)] = true; // The nonce is in progress\\n\\n        // Transfer event for automatic send and receive\\n        emit Transfer(\\n            _address,\\n            _amount,\\n            getCurrentNonce(_address),\\n            signature,\\n            transferType.SEND\\n        );\\n    }\\n\\n    function receiveTokens(\\n        address _address,\\n        uint256 _amount,\\n        bytes calldata signature\\n    ) external {\\n        require(\\n            nonceInProgress[_address][getCurrentNonce(_address)] == true,\\n            \\\"The address hasn't sent any tokens\\\"\\n        );\\n        bytes32 hashedMessage = messageHash(_address, _amount);\\n        require(\\n            verifySignature(_address, hashedMessage, signature),\\n            \\\"This transaction was not verified\\\"\\n        ); // To check if the sender has signed the hash\\n        token.bridgeMint(msg.sender, _amount); // NEED TO ADD CUSTOM INTERFACE\\n\\n        // Transfer event for automatic send and receive\\n        emit Transfer(\\n            _address,\\n            _amount,\\n            getCurrentNonce(_address),\\n            signature,\\n            transferType.RECEIVE\\n        );\\n\\n        // Increment the nonce\\n        currentNonce[_address]++;\\n    }\\n\\n    // This needs to get signed to get allowance to call burn and mint function\\n    function messageHash(\\n        address _address,\\n        uint256 amount\\n    ) public view returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encodePacked(\\n                    \\\"\\\\x19\\\\x01\\\", // Ethereum prefix for message format\\n                    keccak256(\\n                        abi.encode(_address, amount, getCurrentNonce(_address))\\n                    ) // Adds the current nonce of the address automaticaly\\n                )\\n            );\\n    }\\n\\n    // To check if the signer has signed the message\\n    function verifySignature(\\n        address signer,\\n        bytes32 hashedMessage,\\n        bytes calldata signature\\n    ) internal pure returns (bool) {\\n        return signer == hashedMessage.recover(signature);\\n    }\\n\\n    // Return the current nonce\\n    function getCurrentNonce(address _address) public view returns (uint256) {\\n        return currentNonce[_address];\\n    }\\n}\\n\"\n    },\n    \"contracts/Token.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract Token is ERC20 {\\n    constructor() ERC20(\\\"Token\\\", \\\"TOK\\\") {\\n        owner = msg.sender;\\n    }\\n\\n    address private tokenBridge;\\n    address private immutable owner;\\n\\n    modifier isTokenBridge() {\\n        require(\\n            msg.sender == tokenBridge,\\n            \\\"Can only be called from the bridge\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"address not the owner\\\");\\n        _;\\n    }\\n\\n    // ADDS the bridge address for restriction, if we need to we can change the contract, if we develop any upgrades, the old one will aswell lose the access\\n    function addTokenBridgeAddress(address _address) external onlyOwner {\\n        tokenBridge = _address;\\n    }\\n\\n    function _mint(address to, uint256 amount) internal override {\\n        super._mint(to, amount);\\n    }\\n\\n    function _burn(address account, uint256 amount) internal override {\\n        super._burn(account, amount);\\n    }\\n\\n    //MINT in the bridge\\n    function bridgeMint(\\n        address account,\\n        uint256 amount\\n    ) external isTokenBridge {\\n        _mint(account, amount);\\n    }\\n\\n    //BURN in the bridge\\n    function bridgeBurn(\\n        address account,\\n        uint256 amount\\n    ) external isTokenBridge {\\n        _burn(account, amount);\\n    }\\n}\\n\"\n    }\n  },\n  \"settings\": {\n    \"optimizer\": {\n      \"enabled\": false,\n      \"runs\": 200\n    },\n    \"outputSelection\": {\n      \"*\": {\n        \"*\": [\n          \"abi\",\n          \"evm.bytecode\",\n          \"evm.deployedBytecode\",\n          \"evm.methodIdentifiers\",\n          \"metadata\",\n          \"devdoc\",\n          \"userdoc\",\n          \"storageLayout\",\n          \"evm.gasEstimates\"\n        ],\n        \"\": [\n          \"ast\"\n        ]\n      }\n    },\n    \"metadata\": {\n      \"useLiteralContent\": true\n    }\n  }\n}",
      "solcInputHash": "c1f7d7b6457f0266e849e3b0753a7d84",
      "transactionHash": "0x6e109c9a8a1593ed3d4ed1c7f2b97d9480221415bd228859f0933962ac250294",
      "args": []
    },
    "decoded": {
      "from": "0x540467feca43907A701311D0721df481D1f9e238",
      "gasPrice": "1007540260",
      "maxFeePerGas": "1007540260",
      "maxPriorityFeePerGas": "1000000000",
      "gasLimit": "1577065",
      "to": null,
      "value": "0",
      "nonce": 139,
      "data": "0x60a06040523480156200001157600080fd5b506040518060400160405280600581526020017f546f6b656e0000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f544f4b000000000000000000000000000000000000000000000000000000000081525081600390816200008f919062000358565b508060049081620000a1919062000358565b5050503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506200043f565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200016057607f821691505b60208210810362000176576200017562000118565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001e07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001a1565b620001ec8683620001a1565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000239620002336200022d8462000204565b6200020e565b62000204565b9050919050565b6000819050919050565b620002558362000218565b6200026d620002648262000240565b848454620001ae565b825550505050565b600090565b6200028462000275565b620002918184846200024a565b505050565b5b81811015620002b957620002ad6000826200027a565b60018101905062000297565b5050565b601f8211156200030857620002d2816200017c565b620002dd8462000191565b81016020851015620002ed578190505b62000305620002fc8562000191565b83018262000296565b50505b505050565b600082821c905092915050565b60006200032d600019846008026200030d565b1980831691505092915050565b60006200034883836200031a565b9150826002028217905092915050565b6200036382620000de565b67ffffffffffffffff8111156200037f576200037e620000e9565b5b6200038b825462000147565b62000398828285620002bd565b600060209050601f831160018114620003d05760008415620003bb578287015190505b620003c785826200033a565b86555062000437565b601f198416620003e0866200017c565b60005b828110156200040a57848901518255600182019150602085019450602081019050620003e3565b868310156200042a578489015162000426601f8916826200031a565b8355505b6001600288020188555050505b505050505050565b608051611a9f6200045b600039600061043b0152611a9f6000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b411461025d578063a457c2d71461027b578063a9059cbb146102ab578063dd62ed3e146102db576100ea565b806370a08231146101f557806374f4f547146102255780638c2a993e14610241576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806345494e3e146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761030b565b60405161010491906110ee565b60405180910390f35b610127600480360381019061012291906111a9565b61039d565b6040516101349190611204565b60405180910390f35b6101456103c0565b604051610152919061122e565b60405180910390f35b61017560048036038101906101709190611249565b6103ca565b6040516101829190611204565b60405180910390f35b6101936103f9565b6040516101a091906112b8565b60405180910390f35b6101c360048036038101906101be91906111a9565b610402565b6040516101d09190611204565b60405180910390f35b6101f360048036038101906101ee91906112d3565b610439565b005b61020f600480360381019061020a91906112d3565b61050b565b60405161021c919061122e565b60405180910390f35b61023f600480360381019061023a91906111a9565b610553565b005b61025b600480360381019061025691906111a9565b6105f1565b005b61026561068f565b60405161027291906110ee565b60405180910390f35b610295600480360381019061029091906111a9565b610721565b6040516102a29190611204565b60405180910390f35b6102c560048036038101906102c091906111a9565b610798565b6040516102d29190611204565b60405180910390f35b6102f560048036038101906102f09190611300565b6107bb565b604051610302919061122e565b60405180910390f35b60606003805461031a9061136f565b80601f01602080910402602001604051908101604052809291908181526020018280546103469061136f565b80156103935780601f1061036857610100808354040283529160200191610393565b820191906000526020600020905b81548152906001019060200180831161037657829003601f168201915b5050505050905090565b6000806103a8610842565b90506103b581858561084a565b600191505092915050565b6000600254905090565b6000806103d5610842565b90506103e2858285610a13565b6103ed858585610a9f565b60019150509392505050565b60006012905090565b60008061040d610842565b905061042e81858561041f85896107bb565b61042991906113cf565b61084a565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104be9061144f565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105da906114e1565b60405180910390fd5b6105ed8282610d15565b5050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610681576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610678906114e1565b60405180910390fd5b61068b8282610d23565b5050565b60606004805461069e9061136f565b80601f01602080910402602001604051908101604052809291908181526020018280546106ca9061136f565b80156107175780601f106106ec57610100808354040283529160200191610717565b820191906000526020600020905b8154815290600101906020018083116106fa57829003601f168201915b5050505050905090565b60008061072c610842565b9050600061073a82866107bb565b90508381101561077f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077690611573565b60405180910390fd5b61078c828686840361084a565b60019250505092915050565b6000806107a3610842565b90506107b0818585610a9f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b090611605565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610928576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091f90611697565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a06919061122e565b60405180910390a3505050565b6000610a1f84846107bb565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a995781811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290611703565b60405180910390fd5b610a98848484840361084a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0590611795565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7490611827565b60405180910390fd5b610b88838383610d31565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c05906118b9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cfc919061122e565b60405180910390a3610d0f848484610d36565b50505050565b610d1f8282610d3b565b5050565b610d2d8282610f08565b5050565b505050565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610daa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da19061194b565b60405180910390fd5b610db682600083610d31565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e33906119dd565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610eef919061122e565b60405180910390a3610f0383600084610d36565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6e90611a49565b60405180910390fd5b610f8360008383610d31565b8060026000828254610f9591906113cf565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611046919061122e565b60405180910390a361105a60008383610d36565b5050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561109857808201518184015260208101905061107d565b60008484015250505050565b6000601f19601f8301169050919050565b60006110c08261105e565b6110ca8185611069565b93506110da81856020860161107a565b6110e3816110a4565b840191505092915050565b6000602082019050818103600083015261110881846110b5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061114082611115565b9050919050565b61115081611135565b811461115b57600080fd5b50565b60008135905061116d81611147565b92915050565b6000819050919050565b61118681611173565b811461119157600080fd5b50565b6000813590506111a38161117d565b92915050565b600080604083850312156111c0576111bf611110565b5b60006111ce8582860161115e565b92505060206111df85828601611194565b9150509250929050565b60008115159050919050565b6111fe816111e9565b82525050565b600060208201905061121960008301846111f5565b92915050565b61122881611173565b82525050565b6000602082019050611243600083018461121f565b92915050565b60008060006060848603121561126257611261611110565b5b60006112708682870161115e565b93505060206112818682870161115e565b925050604061129286828701611194565b9150509250925092565b600060ff82169050919050565b6112b28161129c565b82525050565b60006020820190506112cd60008301846112a9565b92915050565b6000602082840312156112e9576112e8611110565b5b60006112f78482850161115e565b91505092915050565b6000806040838503121561131757611316611110565b5b60006113258582860161115e565b92505060206113368582860161115e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061138757607f821691505b60208210810361139a57611399611340565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113da82611173565b91506113e583611173565b92508282019050808211156113fd576113fc6113a0565b5b92915050565b7f61646472657373206e6f7420746865206f776e65720000000000000000000000600082015250565b6000611439601583611069565b915061144482611403565b602082019050919050565b600060208201905081810360008301526114688161142c565b9050919050565b7f43616e206f6e6c792062652063616c6c65642066726f6d20746865206272696460008201527f6765000000000000000000000000000000000000000000000000000000000000602082015250565b60006114cb602283611069565b91506114d68261146f565b604082019050919050565b600060208201905081810360008301526114fa816114be565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061155d602583611069565b915061156882611501565b604082019050919050565b6000602082019050818103600083015261158c81611550565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006115ef602483611069565b91506115fa82611593565b604082019050919050565b6000602082019050818103600083015261161e816115e2565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611681602283611069565b915061168c82611625565b604082019050919050565b600060208201905081810360008301526116b081611674565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006116ed601d83611069565b91506116f8826116b7565b602082019050919050565b6000602082019050818103600083015261171c816116e0565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061177f602583611069565b915061178a82611723565b604082019050919050565b600060208201905081810360008301526117ae81611772565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611811602383611069565b915061181c826117b5565b604082019050919050565b6000602082019050818103600083015261184081611804565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006118a3602683611069565b91506118ae82611847565b604082019050919050565b600060208201905081810360008301526118d281611896565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611935602183611069565b9150611940826118d9565b604082019050919050565b6000602082019050818103600083015261196481611928565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006119c7602283611069565b91506119d28261196b565b604082019050919050565b600060208201905081810360008301526119f6816119ba565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611a33601f83611069565b9150611a3e826119fd565b602082019050919050565b60006020820190508181036000830152611a6281611a26565b905091905056fea26469706673582212204a7de346c47dc25b63f2c60df406b21f6ae47dae4c576b240d0f2eb19b5f8d2964736f6c63430008120033",
      "r": "0xfe827498ee72b3dae7e7308bb2363b513f7051577a42dcd02d6fd12248d73af2",
      "s": "0x5a4601a31d8aa715a3495d7faba5bcf0c74dc9d192de70bce6ea34286aa48c0d",
      "v": 0,
      "chainId": 11155111
    }
  }
}